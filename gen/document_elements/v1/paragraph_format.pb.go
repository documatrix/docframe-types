// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: document_elements/v1/paragraph_format.proto

package document_elementsv1

import (
	v1 "github.com/documatrix/docframe-types/gen/box/v1"
	v11 "github.com/documatrix/docframe-types/gen/utils/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoParagraphFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseFormat           *v1.ProtoSimpleBoxedString         `protobuf:"bytes,1,opt,name=base_format,json=baseFormat,proto3" json:"base_format,omitempty"`
	Name                 *v1.ProtoBoxedString               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Default              *v1.ProtoBoxedBool                 `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
	Font                 *v11.ProtoBoxedFont                `protobuf:"bytes,4,opt,name=font,proto3" json:"font,omitempty"`
	Bold                 *v1.ProtoBoxedBool                 `protobuf:"bytes,5,opt,name=bold,proto3" json:"bold,omitempty"`
	Italic               *v1.ProtoBoxedBool                 `protobuf:"bytes,6,opt,name=italic,proto3" json:"italic,omitempty"`
	FontColor            *v11.ProtoBoxedColor               `protobuf:"bytes,7,opt,name=font_color,json=fontColor,proto3" json:"font_color,omitempty"`
	Underline            *v11.ProtoBoxedUnderlineSpec       `protobuf:"bytes,8,opt,name=underline,proto3" json:"underline,omitempty"`
	FontSize             *v11.ProtoBoxedMeasure             `protobuf:"bytes,9,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	CharacterWidth       *v11.ProtoBoxedMeasure             `protobuf:"bytes,10,opt,name=character_width,json=characterWidth,proto3" json:"character_width,omitempty"`
	CharacterSpacing     *v11.ProtoBoxedMeasure             `protobuf:"bytes,11,opt,name=character_spacing,json=characterSpacing,proto3" json:"character_spacing,omitempty"`
	LineFeed             *v11.ProtoBoxedMeasure             `protobuf:"bytes,12,opt,name=line_feed,json=lineFeed,proto3" json:"line_feed,omitempty"`
	Alignment            *v11.ProtoBoxedHorizontalAlignment `protobuf:"bytes,13,opt,name=alignment,proto3" json:"alignment,omitempty"`
	IndentionWidth       *v11.ProtoBoxedMeasure             `protobuf:"bytes,14,opt,name=indention_width,json=indentionWidth,proto3" json:"indention_width,omitempty"`
	IndentionLevel       *v1.ProtoBoxedInt32                `protobuf:"bytes,15,opt,name=indention_level,json=indentionLevel,proto3" json:"indention_level,omitempty"`
	SpaceAbove           *v11.ProtoBoxedMeasure             `protobuf:"bytes,16,opt,name=space_above,json=spaceAbove,proto3" json:"space_above,omitempty"`
	SpaceBelow           *v11.ProtoBoxedMeasure             `protobuf:"bytes,17,opt,name=space_below,json=spaceBelow,proto3" json:"space_below,omitempty"`
	WidowSetting         *v1.ProtoBoxedInt32                `protobuf:"bytes,18,opt,name=widow_setting,json=widowSetting,proto3" json:"widow_setting,omitempty"`
	OrphanSetting        *v1.ProtoBoxedInt32                `protobuf:"bytes,19,opt,name=orphan_setting,json=orphanSetting,proto3" json:"orphan_setting,omitempty"`
	WidowPriority        *v1.ProtoBoxedInt32                `protobuf:"bytes,20,opt,name=widow_priority,json=widowPriority,proto3" json:"widow_priority,omitempty"`
	Strikethrough        *v11.ProtoBoxedStrikethroughSpec   `protobuf:"bytes,21,opt,name=strikethrough,proto3" json:"strikethrough,omitempty"`
	SuperscriptSubscript *v11.ProtoBoxedSPBMode             `protobuf:"bytes,22,opt,name=superscript_subscript,json=superscriptSubscript,proto3" json:"superscript_subscript,omitempty"`
	BackgroundColor      *v11.ProtoBoxedColor               `protobuf:"bytes,23,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	ListSetting          *ProtoBoxedListSetting             `protobuf:"bytes,24,opt,name=list_setting,json=listSetting,proto3" json:"list_setting,omitempty"`
	Hyphenation          *v1.ProtoBoxedBool                 `protobuf:"bytes,25,opt,name=hyphenation,proto3" json:"hyphenation,omitempty"`
	PreNamedString       *v1.ProtoBoxedString               `protobuf:"bytes,26,opt,name=pre_named_string,json=preNamedString,proto3" json:"pre_named_string,omitempty"`
	PostNamedString      *v1.ProtoBoxedString               `protobuf:"bytes,27,opt,name=post_named_string,json=postNamedString,proto3" json:"post_named_string,omitempty"`
	SemanticType         *v1.ProtoBoxedString               `protobuf:"bytes,28,opt,name=semantic_type,json=semanticType,proto3" json:"semantic_type,omitempty"`
}

func (x *ProtoParagraphFormat) Reset() {
	*x = ProtoParagraphFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_paragraph_format_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoParagraphFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoParagraphFormat) ProtoMessage() {}

func (x *ProtoParagraphFormat) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_paragraph_format_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoParagraphFormat.ProtoReflect.Descriptor instead.
func (*ProtoParagraphFormat) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_paragraph_format_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoParagraphFormat) GetBaseFormat() *v1.ProtoSimpleBoxedString {
	if x != nil {
		return x.BaseFormat
	}
	return nil
}

func (x *ProtoParagraphFormat) GetName() *v1.ProtoBoxedString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProtoParagraphFormat) GetDefault() *v1.ProtoBoxedBool {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *ProtoParagraphFormat) GetFont() *v11.ProtoBoxedFont {
	if x != nil {
		return x.Font
	}
	return nil
}

func (x *ProtoParagraphFormat) GetBold() *v1.ProtoBoxedBool {
	if x != nil {
		return x.Bold
	}
	return nil
}

func (x *ProtoParagraphFormat) GetItalic() *v1.ProtoBoxedBool {
	if x != nil {
		return x.Italic
	}
	return nil
}

func (x *ProtoParagraphFormat) GetFontColor() *v11.ProtoBoxedColor {
	if x != nil {
		return x.FontColor
	}
	return nil
}

func (x *ProtoParagraphFormat) GetUnderline() *v11.ProtoBoxedUnderlineSpec {
	if x != nil {
		return x.Underline
	}
	return nil
}

func (x *ProtoParagraphFormat) GetFontSize() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.FontSize
	}
	return nil
}

func (x *ProtoParagraphFormat) GetCharacterWidth() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.CharacterWidth
	}
	return nil
}

func (x *ProtoParagraphFormat) GetCharacterSpacing() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.CharacterSpacing
	}
	return nil
}

func (x *ProtoParagraphFormat) GetLineFeed() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.LineFeed
	}
	return nil
}

func (x *ProtoParagraphFormat) GetAlignment() *v11.ProtoBoxedHorizontalAlignment {
	if x != nil {
		return x.Alignment
	}
	return nil
}

func (x *ProtoParagraphFormat) GetIndentionWidth() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.IndentionWidth
	}
	return nil
}

func (x *ProtoParagraphFormat) GetIndentionLevel() *v1.ProtoBoxedInt32 {
	if x != nil {
		return x.IndentionLevel
	}
	return nil
}

func (x *ProtoParagraphFormat) GetSpaceAbove() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.SpaceAbove
	}
	return nil
}

func (x *ProtoParagraphFormat) GetSpaceBelow() *v11.ProtoBoxedMeasure {
	if x != nil {
		return x.SpaceBelow
	}
	return nil
}

func (x *ProtoParagraphFormat) GetWidowSetting() *v1.ProtoBoxedInt32 {
	if x != nil {
		return x.WidowSetting
	}
	return nil
}

func (x *ProtoParagraphFormat) GetOrphanSetting() *v1.ProtoBoxedInt32 {
	if x != nil {
		return x.OrphanSetting
	}
	return nil
}

func (x *ProtoParagraphFormat) GetWidowPriority() *v1.ProtoBoxedInt32 {
	if x != nil {
		return x.WidowPriority
	}
	return nil
}

func (x *ProtoParagraphFormat) GetStrikethrough() *v11.ProtoBoxedStrikethroughSpec {
	if x != nil {
		return x.Strikethrough
	}
	return nil
}

func (x *ProtoParagraphFormat) GetSuperscriptSubscript() *v11.ProtoBoxedSPBMode {
	if x != nil {
		return x.SuperscriptSubscript
	}
	return nil
}

func (x *ProtoParagraphFormat) GetBackgroundColor() *v11.ProtoBoxedColor {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *ProtoParagraphFormat) GetListSetting() *ProtoBoxedListSetting {
	if x != nil {
		return x.ListSetting
	}
	return nil
}

func (x *ProtoParagraphFormat) GetHyphenation() *v1.ProtoBoxedBool {
	if x != nil {
		return x.Hyphenation
	}
	return nil
}

func (x *ProtoParagraphFormat) GetPreNamedString() *v1.ProtoBoxedString {
	if x != nil {
		return x.PreNamedString
	}
	return nil
}

func (x *ProtoParagraphFormat) GetPostNamedString() *v1.ProtoBoxedString {
	if x != nil {
		return x.PostNamedString
	}
	return nil
}

func (x *ProtoParagraphFormat) GetSemanticType() *v1.ProtoBoxedString {
	if x != nil {
		return x.SemanticType
	}
	return nil
}

var File_document_elements_v1_paragraph_format_proto protoreflect.FileDescriptor

var file_document_elements_v1_paragraph_format_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x1a, 0x11, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x6f, 0x78, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x27, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x6f, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x62, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x75,
	0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x0e, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x07, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x46, 0x6f, 0x6e, 0x74, 0x52, 0x04,
	0x66, 0x6f, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x62, 0x6f, 0x6c, 0x64,
	0x12, 0x2e, 0x0a, 0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x06, 0x69, 0x74, 0x61, 0x6c, 0x69, 0x63,
	0x12, 0x38, 0x0a, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x09, 0x66, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x75, 0x6e,
	0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f,
	0x78, 0x65, 0x64, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x09, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x6f, 0x6e,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x48, 0x0a, 0x11, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x69, 0x6e, 0x67,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x70,
	0x61, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x46, 0x65, 0x65, 0x64, 0x12,
	0x45, 0x0a, 0x09, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74,
	0x61, 0x6c, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0e, 0x69, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x40, 0x0a, 0x0f,
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0e,
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3c,
	0x0a, 0x0b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x52, 0x0a, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x62, 0x6f, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x0b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x6c, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0a,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x65, 0x6c, 0x6f, 0x77, 0x12, 0x3c, 0x0a, 0x0d, 0x77, 0x69,
	0x64, 0x6f, 0x77, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0c, 0x77, 0x69, 0x64, 0x6f,
	0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0e, 0x6f, 0x72, 0x70, 0x68,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0d, 0x6f, 0x72, 0x70, 0x68, 0x61,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x0e, 0x77, 0x69, 0x64, 0x6f,
	0x77, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0d, 0x77, 0x69, 0x64, 0x6f, 0x77,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x69,
	0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68, 0x72, 0x6f, 0x75,
	0x67, 0x68, 0x53, 0x70, 0x65, 0x63, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x74, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x12, 0x50, 0x0a, 0x15, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x50, 0x42, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x14, 0x73, 0x75, 0x70, 0x65, 0x72, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x4e, 0x0a,
	0x0c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a,
	0x0b, 0x68, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0b, 0x68, 0x79, 0x70, 0x68,
	0x65, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x11, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x0f, 0x70, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x0c, 0x73, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x42, 0xf0, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x50,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2f, 0x64, 0x6f, 0x63,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02,
	0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_document_elements_v1_paragraph_format_proto_rawDescOnce sync.Once
	file_document_elements_v1_paragraph_format_proto_rawDescData = file_document_elements_v1_paragraph_format_proto_rawDesc
)

func file_document_elements_v1_paragraph_format_proto_rawDescGZIP() []byte {
	file_document_elements_v1_paragraph_format_proto_rawDescOnce.Do(func() {
		file_document_elements_v1_paragraph_format_proto_rawDescData = protoimpl.X.CompressGZIP(file_document_elements_v1_paragraph_format_proto_rawDescData)
	})
	return file_document_elements_v1_paragraph_format_proto_rawDescData
}

var file_document_elements_v1_paragraph_format_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_document_elements_v1_paragraph_format_proto_goTypes = []interface{}{
	(*ProtoParagraphFormat)(nil),              // 0: document_elements.v1.ProtoParagraphFormat
	(*v1.ProtoSimpleBoxedString)(nil),         // 1: box.v1.ProtoSimpleBoxedString
	(*v1.ProtoBoxedString)(nil),               // 2: box.v1.ProtoBoxedString
	(*v1.ProtoBoxedBool)(nil),                 // 3: box.v1.ProtoBoxedBool
	(*v11.ProtoBoxedFont)(nil),                // 4: utils.v1.ProtoBoxedFont
	(*v11.ProtoBoxedColor)(nil),               // 5: utils.v1.ProtoBoxedColor
	(*v11.ProtoBoxedUnderlineSpec)(nil),       // 6: utils.v1.ProtoBoxedUnderlineSpec
	(*v11.ProtoBoxedMeasure)(nil),             // 7: utils.v1.ProtoBoxedMeasure
	(*v11.ProtoBoxedHorizontalAlignment)(nil), // 8: utils.v1.ProtoBoxedHorizontalAlignment
	(*v1.ProtoBoxedInt32)(nil),                // 9: box.v1.ProtoBoxedInt32
	(*v11.ProtoBoxedStrikethroughSpec)(nil),   // 10: utils.v1.ProtoBoxedStrikethroughSpec
	(*v11.ProtoBoxedSPBMode)(nil),             // 11: utils.v1.ProtoBoxedSPBMode
	(*ProtoBoxedListSetting)(nil),             // 12: document_elements.v1.ProtoBoxedListSetting
}
var file_document_elements_v1_paragraph_format_proto_depIdxs = []int32{
	1,  // 0: document_elements.v1.ProtoParagraphFormat.base_format:type_name -> box.v1.ProtoSimpleBoxedString
	2,  // 1: document_elements.v1.ProtoParagraphFormat.name:type_name -> box.v1.ProtoBoxedString
	3,  // 2: document_elements.v1.ProtoParagraphFormat.default:type_name -> box.v1.ProtoBoxedBool
	4,  // 3: document_elements.v1.ProtoParagraphFormat.font:type_name -> utils.v1.ProtoBoxedFont
	3,  // 4: document_elements.v1.ProtoParagraphFormat.bold:type_name -> box.v1.ProtoBoxedBool
	3,  // 5: document_elements.v1.ProtoParagraphFormat.italic:type_name -> box.v1.ProtoBoxedBool
	5,  // 6: document_elements.v1.ProtoParagraphFormat.font_color:type_name -> utils.v1.ProtoBoxedColor
	6,  // 7: document_elements.v1.ProtoParagraphFormat.underline:type_name -> utils.v1.ProtoBoxedUnderlineSpec
	7,  // 8: document_elements.v1.ProtoParagraphFormat.font_size:type_name -> utils.v1.ProtoBoxedMeasure
	7,  // 9: document_elements.v1.ProtoParagraphFormat.character_width:type_name -> utils.v1.ProtoBoxedMeasure
	7,  // 10: document_elements.v1.ProtoParagraphFormat.character_spacing:type_name -> utils.v1.ProtoBoxedMeasure
	7,  // 11: document_elements.v1.ProtoParagraphFormat.line_feed:type_name -> utils.v1.ProtoBoxedMeasure
	8,  // 12: document_elements.v1.ProtoParagraphFormat.alignment:type_name -> utils.v1.ProtoBoxedHorizontalAlignment
	7,  // 13: document_elements.v1.ProtoParagraphFormat.indention_width:type_name -> utils.v1.ProtoBoxedMeasure
	9,  // 14: document_elements.v1.ProtoParagraphFormat.indention_level:type_name -> box.v1.ProtoBoxedInt32
	7,  // 15: document_elements.v1.ProtoParagraphFormat.space_above:type_name -> utils.v1.ProtoBoxedMeasure
	7,  // 16: document_elements.v1.ProtoParagraphFormat.space_below:type_name -> utils.v1.ProtoBoxedMeasure
	9,  // 17: document_elements.v1.ProtoParagraphFormat.widow_setting:type_name -> box.v1.ProtoBoxedInt32
	9,  // 18: document_elements.v1.ProtoParagraphFormat.orphan_setting:type_name -> box.v1.ProtoBoxedInt32
	9,  // 19: document_elements.v1.ProtoParagraphFormat.widow_priority:type_name -> box.v1.ProtoBoxedInt32
	10, // 20: document_elements.v1.ProtoParagraphFormat.strikethrough:type_name -> utils.v1.ProtoBoxedStrikethroughSpec
	11, // 21: document_elements.v1.ProtoParagraphFormat.superscript_subscript:type_name -> utils.v1.ProtoBoxedSPBMode
	5,  // 22: document_elements.v1.ProtoParagraphFormat.background_color:type_name -> utils.v1.ProtoBoxedColor
	12, // 23: document_elements.v1.ProtoParagraphFormat.list_setting:type_name -> document_elements.v1.ProtoBoxedListSetting
	3,  // 24: document_elements.v1.ProtoParagraphFormat.hyphenation:type_name -> box.v1.ProtoBoxedBool
	2,  // 25: document_elements.v1.ProtoParagraphFormat.pre_named_string:type_name -> box.v1.ProtoBoxedString
	2,  // 26: document_elements.v1.ProtoParagraphFormat.post_named_string:type_name -> box.v1.ProtoBoxedString
	2,  // 27: document_elements.v1.ProtoParagraphFormat.semantic_type:type_name -> box.v1.ProtoBoxedString
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_document_elements_v1_paragraph_format_proto_init() }
func file_document_elements_v1_paragraph_format_proto_init() {
	if File_document_elements_v1_paragraph_format_proto != nil {
		return
	}
	file_document_elements_v1_list_setting_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_document_elements_v1_paragraph_format_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoParagraphFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_document_elements_v1_paragraph_format_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_document_elements_v1_paragraph_format_proto_goTypes,
		DependencyIndexes: file_document_elements_v1_paragraph_format_proto_depIdxs,
		MessageInfos:      file_document_elements_v1_paragraph_format_proto_msgTypes,
	}.Build()
	File_document_elements_v1_paragraph_format_proto = out.File
	file_document_elements_v1_paragraph_format_proto_rawDesc = nil
	file_document_elements_v1_paragraph_format_proto_goTypes = nil
	file_document_elements_v1_paragraph_format_proto_depIdxs = nil
}
