// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: document_elements/v1/table.proto

package document_elementsv1

import (
	v11 "github.com/documatrix/docframe-types/gen/box/v1"
	v1 "github.com/documatrix/docframe-types/gen/utils/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoTableContentGroupType int32

const (
	ProtoTableContentGroupType_PROTO_TABLE_CONTENT_GROUP_TYPE_BODY       ProtoTableContentGroupType = 0
	ProtoTableContentGroupType_PROTO_TABLE_CONTENT_GROUP_TYPE_HEADER     ProtoTableContentGroupType = 1
	ProtoTableContentGroupType_PROTO_TABLE_CONTENT_GROUP_TYPE_FOOTER     ProtoTableContentGroupType = 2
	ProtoTableContentGroupType_PROTO_TABLE_CONTENT_GROUP_TYPE_SUB_HEADER ProtoTableContentGroupType = 3
)

// Enum value maps for ProtoTableContentGroupType.
var (
	ProtoTableContentGroupType_name = map[int32]string{
		0: "PROTO_TABLE_CONTENT_GROUP_TYPE_BODY",
		1: "PROTO_TABLE_CONTENT_GROUP_TYPE_HEADER",
		2: "PROTO_TABLE_CONTENT_GROUP_TYPE_FOOTER",
		3: "PROTO_TABLE_CONTENT_GROUP_TYPE_SUB_HEADER",
	}
	ProtoTableContentGroupType_value = map[string]int32{
		"PROTO_TABLE_CONTENT_GROUP_TYPE_BODY":       0,
		"PROTO_TABLE_CONTENT_GROUP_TYPE_HEADER":     1,
		"PROTO_TABLE_CONTENT_GROUP_TYPE_FOOTER":     2,
		"PROTO_TABLE_CONTENT_GROUP_TYPE_SUB_HEADER": 3,
	}
)

func (x ProtoTableContentGroupType) Enum() *ProtoTableContentGroupType {
	p := new(ProtoTableContentGroupType)
	*p = x
	return p
}

func (x ProtoTableContentGroupType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoTableContentGroupType) Descriptor() protoreflect.EnumDescriptor {
	return file_document_elements_v1_table_proto_enumTypes[0].Descriptor()
}

func (ProtoTableContentGroupType) Type() protoreflect.EnumType {
	return &file_document_elements_v1_table_proto_enumTypes[0]
}

func (x ProtoTableContentGroupType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoTableContentGroupType.Descriptor instead.
func (ProtoTableContentGroupType) EnumDescriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{0}
}

type ProtoTableCellType int32

const (
	ProtoTableCellType_PROTO_TABLE_CELL_TYPE_BODY       ProtoTableCellType = 0
	ProtoTableCellType_PROTO_TABLE_CELL_TYPE_ROW_HEADER ProtoTableCellType = 1
	ProtoTableCellType_PROTO_TABLE_CELL_TYPE_ROW_FOOTER ProtoTableCellType = 2
)

// Enum value maps for ProtoTableCellType.
var (
	ProtoTableCellType_name = map[int32]string{
		0: "PROTO_TABLE_CELL_TYPE_BODY",
		1: "PROTO_TABLE_CELL_TYPE_ROW_HEADER",
		2: "PROTO_TABLE_CELL_TYPE_ROW_FOOTER",
	}
	ProtoTableCellType_value = map[string]int32{
		"PROTO_TABLE_CELL_TYPE_BODY":       0,
		"PROTO_TABLE_CELL_TYPE_ROW_HEADER": 1,
		"PROTO_TABLE_CELL_TYPE_ROW_FOOTER": 2,
	}
)

func (x ProtoTableCellType) Enum() *ProtoTableCellType {
	p := new(ProtoTableCellType)
	*p = x
	return p
}

func (x ProtoTableCellType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoTableCellType) Descriptor() protoreflect.EnumDescriptor {
	return file_document_elements_v1_table_proto_enumTypes[1].Descriptor()
}

func (ProtoTableCellType) Type() protoreflect.EnumType {
	return &file_document_elements_v1_table_proto_enumTypes[1]
}

func (x ProtoTableCellType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoTableCellType.Descriptor instead.
func (ProtoTableCellType) EnumDescriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{1}
}

type ProtoTableConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *ProtoTableSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName string              `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
}

func (x *ProtoTableConfig) Reset() {
	*x = ProtoTableConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableConfig) ProtoMessage() {}

func (x *ProtoTableConfig) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableConfig.ProtoReflect.Descriptor instead.
func (*ProtoTableConfig) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoTableConfig) GetSettings() *ProtoTableSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableConfig) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

// go-gen:ignore
type ProtoTableSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XOffset      *v1.ProtoMeasure      `protobuf:"bytes,1,opt,name=x_offset,json=xOffset,proto3" json:"x_offset,omitempty"`
	LeftMeasure  *v11.ProtoBoxedBool   `protobuf:"bytes,2,opt,name=left_measure,json=leftMeasure,proto3" json:"left_measure,omitempty"`
	Width        *v1.ProtoMeasure      `protobuf:"bytes,3,opt,name=width,proto3" json:"width,omitempty"`
	RepeatHeader *v11.ProtoBoxedUint32 `protobuf:"bytes,4,opt,name=repeat_header,json=repeatHeader,proto3" json:"repeat_header,omitempty"`
	Ws           *ProtoTableWS         `protobuf:"bytes,5,opt,name=ws,proto3" json:"ws,omitempty"`
}

func (x *ProtoTableSettings) Reset() {
	*x = ProtoTableSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableSettings) ProtoMessage() {}

func (x *ProtoTableSettings) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableSettings.ProtoReflect.Descriptor instead.
func (*ProtoTableSettings) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTableSettings) GetXOffset() *v1.ProtoMeasure {
	if x != nil {
		return x.XOffset
	}
	return nil
}

func (x *ProtoTableSettings) GetLeftMeasure() *v11.ProtoBoxedBool {
	if x != nil {
		return x.LeftMeasure
	}
	return nil
}

func (x *ProtoTableSettings) GetWidth() *v1.ProtoMeasure {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *ProtoTableSettings) GetRepeatHeader() *v11.ProtoBoxedUint32 {
	if x != nil {
		return x.RepeatHeader
	}
	return nil
}

func (x *ProtoTableSettings) GetWs() *ProtoTableWS {
	if x != nil {
		return x.Ws
	}
	return nil
}

// go-gen:ignore
type ProtoBoxedTableContentGroupType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  ProtoTableContentGroupType `protobuf:"varint,1,opt,name=value,proto3,enum=document_elements.v1.ProtoTableContentGroupType" json:"value,omitempty"`
	IsNull bool                       `protobuf:"varint,2,opt,name=is_null,json=isNull,proto3" json:"is_null,omitempty"`
}

func (x *ProtoBoxedTableContentGroupType) Reset() {
	*x = ProtoBoxedTableContentGroupType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBoxedTableContentGroupType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBoxedTableContentGroupType) ProtoMessage() {}

func (x *ProtoBoxedTableContentGroupType) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBoxedTableContentGroupType.ProtoReflect.Descriptor instead.
func (*ProtoBoxedTableContentGroupType) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoBoxedTableContentGroupType) GetValue() ProtoTableContentGroupType {
	if x != nil {
		return x.Value
	}
	return ProtoTableContentGroupType_PROTO_TABLE_CONTENT_GROUP_TYPE_BODY
}

func (x *ProtoBoxedTableContentGroupType) GetIsNull() bool {
	if x != nil {
		return x.IsNull
	}
	return false
}

type ProtoTableContentGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings *ProtoTableContentGroupSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *ProtoTableContentGroup) Reset() {
	*x = ProtoTableContentGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableContentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableContentGroup) ProtoMessage() {}

func (x *ProtoTableContentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableContentGroup.ProtoReflect.Descriptor instead.
func (*ProtoTableContentGroup) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoTableContentGroup) GetSettings() *ProtoTableContentGroupSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ProtoTableContentGroupConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *ProtoTableContentGroupSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName string                          `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
}

func (x *ProtoTableContentGroupConfig) Reset() {
	*x = ProtoTableContentGroupConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableContentGroupConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableContentGroupConfig) ProtoMessage() {}

func (x *ProtoTableContentGroupConfig) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableContentGroupConfig.ProtoReflect.Descriptor instead.
func (*ProtoTableContentGroupConfig) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoTableContentGroupConfig) GetSettings() *ProtoTableContentGroupSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableContentGroupConfig) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

// go-gen:ignore
type ProtoTableContentGroupSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentGroupType *ProtoBoxedTableContentGroupType `protobuf:"bytes,1,opt,name=content_group_type,json=contentGroupType,proto3" json:"content_group_type,omitempty"`
	BackgroundColors []*v1.ProtoColor                 `protobuf:"bytes,2,rep,name=background_colors,json=backgroundColors,proto3" json:"background_colors,omitempty"`
	Ws               *ProtoTableWS                    `protobuf:"bytes,3,opt,name=ws,proto3" json:"ws,omitempty"`
}

func (x *ProtoTableContentGroupSettings) Reset() {
	*x = ProtoTableContentGroupSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableContentGroupSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableContentGroupSettings) ProtoMessage() {}

func (x *ProtoTableContentGroupSettings) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableContentGroupSettings.ProtoReflect.Descriptor instead.
func (*ProtoTableContentGroupSettings) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoTableContentGroupSettings) GetContentGroupType() *ProtoBoxedTableContentGroupType {
	if x != nil {
		return x.ContentGroupType
	}
	return nil
}

func (x *ProtoTableContentGroupSettings) GetBackgroundColors() []*v1.ProtoColor {
	if x != nil {
		return x.BackgroundColors
	}
	return nil
}

func (x *ProtoTableContentGroupSettings) GetWs() *ProtoTableWS {
	if x != nil {
		return x.Ws
	}
	return nil
}

type ProtoTableRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings        *ProtoTableRowSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	RowConfigNumber *v11.ProtoBoxedUint32  `protobuf:"bytes,2,opt,name=row_config_number,json=rowConfigNumber,proto3" json:"row_config_number,omitempty"`
}

func (x *ProtoTableRow) Reset() {
	*x = ProtoTableRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableRow) ProtoMessage() {}

func (x *ProtoTableRow) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableRow.ProtoReflect.Descriptor instead.
func (*ProtoTableRow) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoTableRow) GetSettings() *ProtoTableRowSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableRow) GetRowConfigNumber() *v11.ProtoBoxedUint32 {
	if x != nil {
		return x.RowConfigNumber
	}
	return nil
}

type ProtoTableRowConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *ProtoTableRowSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName string                 `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	RowHeader  string                 `protobuf:"bytes,3,opt,name=row_header,json=rowHeader,proto3" json:"row_header,omitempty"`
	RowFooter  string                 `protobuf:"bytes,4,opt,name=row_footer,json=rowFooter,proto3" json:"row_footer,omitempty"`
}

func (x *ProtoTableRowConfig) Reset() {
	*x = ProtoTableRowConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableRowConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableRowConfig) ProtoMessage() {}

func (x *ProtoTableRowConfig) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableRowConfig.ProtoReflect.Descriptor instead.
func (*ProtoTableRowConfig) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoTableRowConfig) GetSettings() *ProtoTableRowSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableRowConfig) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ProtoTableRowConfig) GetRowHeader() string {
	if x != nil {
		return x.RowHeader
	}
	return ""
}

func (x *ProtoTableRowConfig) GetRowFooter() string {
	if x != nil {
		return x.RowFooter
	}
	return ""
}

// go-gen:ignore
type ProtoTableRowSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinHeight *v1.ProtoMeasure `protobuf:"bytes,1,opt,name=min_height,json=minHeight,proto3" json:"min_height,omitempty"`
	Ws        *ProtoTableWS    `protobuf:"bytes,2,opt,name=ws,proto3" json:"ws,omitempty"`
}

func (x *ProtoTableRowSettings) Reset() {
	*x = ProtoTableRowSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableRowSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableRowSettings) ProtoMessage() {}

func (x *ProtoTableRowSettings) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableRowSettings.ProtoReflect.Descriptor instead.
func (*ProtoTableRowSettings) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoTableRowSettings) GetMinHeight() *v1.ProtoMeasure {
	if x != nil {
		return x.MinHeight
	}
	return nil
}

func (x *ProtoTableRowSettings) GetWs() *ProtoTableWS {
	if x != nil {
		return x.Ws
	}
	return nil
}

// go-gen:ignore
type ProtoBoxedTableCellType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  ProtoTableCellType `protobuf:"varint,1,opt,name=value,proto3,enum=document_elements.v1.ProtoTableCellType" json:"value,omitempty"`
	IsNull bool               `protobuf:"varint,2,opt,name=is_null,json=isNull,proto3" json:"is_null,omitempty"`
}

func (x *ProtoBoxedTableCellType) Reset() {
	*x = ProtoBoxedTableCellType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBoxedTableCellType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBoxedTableCellType) ProtoMessage() {}

func (x *ProtoBoxedTableCellType) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBoxedTableCellType.ProtoReflect.Descriptor instead.
func (*ProtoBoxedTableCellType) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoBoxedTableCellType) GetValue() ProtoTableCellType {
	if x != nil {
		return x.Value
	}
	return ProtoTableCellType_PROTO_TABLE_CELL_TYPE_BODY
}

func (x *ProtoBoxedTableCellType) GetIsNull() bool {
	if x != nil {
		return x.IsNull
	}
	return false
}

type ProtoTableCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings         *ProtoTableCellSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	CellConfigNumber *v11.ProtoBoxedUint32   `protobuf:"bytes,2,opt,name=cell_config_number,json=cellConfigNumber,proto3" json:"cell_config_number,omitempty"`
	Index            *v11.ProtoBoxedUint32   `protobuf:"bytes,3,opt,name=index,proto3" json:"index,omitempty"`
	// Indicates if this table cell should merged with the left table cell.
	MergedLeft bool `protobuf:"varint,4,opt,name=merged_left,json=mergedLeft,proto3" json:"merged_left,omitempty"`
	// Indicates if this table cell should be merged with the cell above.
	MergedUp bool `protobuf:"varint,5,opt,name=merged_up,json=mergedUp,proto3" json:"merged_up,omitempty"`
}

func (x *ProtoTableCell) Reset() {
	*x = ProtoTableCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableCell) ProtoMessage() {}

func (x *ProtoTableCell) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableCell.ProtoReflect.Descriptor instead.
func (*ProtoTableCell) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoTableCell) GetSettings() *ProtoTableCellSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableCell) GetCellConfigNumber() *v11.ProtoBoxedUint32 {
	if x != nil {
		return x.CellConfigNumber
	}
	return nil
}

func (x *ProtoTableCell) GetIndex() *v11.ProtoBoxedUint32 {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *ProtoTableCell) GetMergedLeft() bool {
	if x != nil {
		return x.MergedLeft
	}
	return false
}

func (x *ProtoTableCell) GetMergedUp() bool {
	if x != nil {
		return x.MergedUp
	}
	return false
}

type ProtoTableCellConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings   *ProtoTableCellSettings  `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName string                   `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	CellType   *ProtoBoxedTableCellType `protobuf:"bytes,3,opt,name=cell_type,json=cellType,proto3" json:"cell_type,omitempty"`
}

func (x *ProtoTableCellConfig) Reset() {
	*x = ProtoTableCellConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableCellConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableCellConfig) ProtoMessage() {}

func (x *ProtoTableCellConfig) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableCellConfig.ProtoReflect.Descriptor instead.
func (*ProtoTableCellConfig) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoTableCellConfig) GetSettings() *ProtoTableCellSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTableCellConfig) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ProtoTableCellConfig) GetCellType() *ProtoBoxedTableCellType {
	if x != nil {
		return x.CellType
	}
	return nil
}

// go-gen:ignore
type ProtoTableCellSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width           *v1.ProtoMeasure                  `protobuf:"bytes,1,opt,name=width,proto3" json:"width,omitempty"`
	Align           *v1.ProtoBoxedHorizontalAlignment `protobuf:"bytes,2,opt,name=align,proto3" json:"align,omitempty"`
	Valign          *v1.ProtoBoxedVerticalAlignment   `protobuf:"bytes,3,opt,name=valign,proto3" json:"valign,omitempty"`
	BackgroundColor *v1.ProtoColor                    `protobuf:"bytes,4,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	Padding         *v1.ProtoSideMeasures             `protobuf:"bytes,5,opt,name=padding,proto3" json:"padding,omitempty"`
	Border          *v1.ProtoSideBorders              `protobuf:"bytes,6,opt,name=border,proto3" json:"border,omitempty"`
	Margin          *v1.ProtoSideMeasures             `protobuf:"bytes,7,opt,name=margin,proto3" json:"margin,omitempty"`
	Rotation        *v11.ProtoBoxedDouble             `protobuf:"bytes,8,opt,name=rotation,proto3" json:"rotation,omitempty"`
	// If defaultParagraphFormat is not null, it contains the name of
	// a paragraph format, which should be used as default paragraph format
	// for content in a table cell using these settings.
	DefaultParagraphFormat *v11.ProtoBoxedString `protobuf:"bytes,9,opt,name=default_paragraph_format,json=defaultParagraphFormat,proto3" json:"default_paragraph_format,omitempty"`
}

func (x *ProtoTableCellSettings) Reset() {
	*x = ProtoTableCellSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableCellSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableCellSettings) ProtoMessage() {}

func (x *ProtoTableCellSettings) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableCellSettings.ProtoReflect.Descriptor instead.
func (*ProtoTableCellSettings) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoTableCellSettings) GetWidth() *v1.ProtoMeasure {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *ProtoTableCellSettings) GetAlign() *v1.ProtoBoxedHorizontalAlignment {
	if x != nil {
		return x.Align
	}
	return nil
}

func (x *ProtoTableCellSettings) GetValign() *v1.ProtoBoxedVerticalAlignment {
	if x != nil {
		return x.Valign
	}
	return nil
}

func (x *ProtoTableCellSettings) GetBackgroundColor() *v1.ProtoColor {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *ProtoTableCellSettings) GetPadding() *v1.ProtoSideMeasures {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *ProtoTableCellSettings) GetBorder() *v1.ProtoSideBorders {
	if x != nil {
		return x.Border
	}
	return nil
}

func (x *ProtoTableCellSettings) GetMargin() *v1.ProtoSideMeasures {
	if x != nil {
		return x.Margin
	}
	return nil
}

func (x *ProtoTableCellSettings) GetRotation() *v11.ProtoBoxedDouble {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *ProtoTableCellSettings) GetDefaultParagraphFormat() *v11.ProtoBoxedString {
	if x != nil {
		return x.DefaultParagraphFormat
	}
	return nil
}

// go-gen:ignore
type ProtoTableWS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinLinesBefore uint32 `protobuf:"varint,1,opt,name=min_lines_before,json=minLinesBefore,proto3" json:"min_lines_before,omitempty"`
	MinLinesAfter  uint32 `protobuf:"varint,2,opt,name=min_lines_after,json=minLinesAfter,proto3" json:"min_lines_after,omitempty"`
	Priority       uint32 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *ProtoTableWS) Reset() {
	*x = ProtoTableWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_table_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTableWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTableWS) ProtoMessage() {}

func (x *ProtoTableWS) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_table_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTableWS.ProtoReflect.Descriptor instead.
func (*ProtoTableWS) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_table_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoTableWS) GetMinLinesBefore() uint32 {
	if x != nil {
		return x.MinLinesBefore
	}
	return 0
}

func (x *ProtoTableWS) GetMinLinesAfter() uint32 {
	if x != nil {
		return x.MinLinesAfter
	}
	return 0
}

func (x *ProtoTableWS) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

var File_document_elements_v1_table_proto protoreflect.FileDescriptor

var file_document_elements_v1_table_proto_rawDesc = []byte{
	0x0a, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x6f, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x6f, 0x78,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x62, 0x6f, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x75,
	0x74, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xa3, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x78, 0x5f, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x07, 0x78, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x6c, 0x65,
	0x66, 0x74, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x3d, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x55, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x02, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x57, 0x53, 0x52, 0x02, 0x77, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x6a, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x50, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x50, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x1e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x63,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x02, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x57, 0x53, 0x52, 0x02, 0x77, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x47, 0x0a, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x44, 0x0a, 0x11, 0x72, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42,
	0x6f, 0x78, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x0f, 0x72, 0x6f, 0x77, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x6f, 0x77, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x6f, 0x77, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x15,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x32, 0x0a, 0x02,
	0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x53, 0x52, 0x02, 0x77, 0x73,
	0x22, 0x72, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x4e, 0x75, 0x6c, 0x6c, 0x22, 0x90, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x46, 0x0a, 0x12, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65,
	0x64, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x10, 0x63, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x55, 0x69, 0x6e, 0x74,
	0x33, 0x32, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72,
	0x67, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x65, 0x72, 0x67, 0x65, 0x64, 0x55, 0x70, 0x22, 0xcd, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x48, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x09, 0x63,
	0x65, 0x6c, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63,
	0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0xaf, 0x04, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x3d, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x48, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x41,
	0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x12,
	0x3d, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x3f,
	0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0f,
	0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x35, 0x0a, 0x07, 0x70, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x53, 0x69, 0x64, 0x65, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x52, 0x07, 0x70,
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x64, 0x65, 0x42, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x6d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x74, 0x69,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x69, 0x64, 0x65, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12,
	0x34, 0x0a, 0x08, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x6f, 0x78, 0x65, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x6f, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x6f, 0x78, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x7c, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x53, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x69, 0x6e,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x69,
	0x6e, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x2a, 0xca, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f,
	0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x00, 0x12,
	0x29, 0x0a, 0x25, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4f,
	0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f,
	0x55, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x10, 0x03, 0x2a, 0x80, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x24, 0x0a, 0x20, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x57, 0x5f, 0x46,
	0x4f, 0x4f, 0x54, 0x45, 0x52, 0x10, 0x02, 0x42, 0xe6, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2f, 0x64, 0x6f, 0x63, 0x66, 0x72, 0x61,
	0x6d, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76,
	0x31, 0x3b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x13, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_document_elements_v1_table_proto_rawDescOnce sync.Once
	file_document_elements_v1_table_proto_rawDescData = file_document_elements_v1_table_proto_rawDesc
)

func file_document_elements_v1_table_proto_rawDescGZIP() []byte {
	file_document_elements_v1_table_proto_rawDescOnce.Do(func() {
		file_document_elements_v1_table_proto_rawDescData = protoimpl.X.CompressGZIP(file_document_elements_v1_table_proto_rawDescData)
	})
	return file_document_elements_v1_table_proto_rawDescData
}

var file_document_elements_v1_table_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_document_elements_v1_table_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_document_elements_v1_table_proto_goTypes = []interface{}{
	(ProtoTableContentGroupType)(0),          // 0: document_elements.v1.ProtoTableContentGroupType
	(ProtoTableCellType)(0),                  // 1: document_elements.v1.ProtoTableCellType
	(*ProtoTableConfig)(nil),                 // 2: document_elements.v1.ProtoTableConfig
	(*ProtoTableSettings)(nil),               // 3: document_elements.v1.ProtoTableSettings
	(*ProtoBoxedTableContentGroupType)(nil),  // 4: document_elements.v1.ProtoBoxedTableContentGroupType
	(*ProtoTableContentGroup)(nil),           // 5: document_elements.v1.ProtoTableContentGroup
	(*ProtoTableContentGroupConfig)(nil),     // 6: document_elements.v1.ProtoTableContentGroupConfig
	(*ProtoTableContentGroupSettings)(nil),   // 7: document_elements.v1.ProtoTableContentGroupSettings
	(*ProtoTableRow)(nil),                    // 8: document_elements.v1.ProtoTableRow
	(*ProtoTableRowConfig)(nil),              // 9: document_elements.v1.ProtoTableRowConfig
	(*ProtoTableRowSettings)(nil),            // 10: document_elements.v1.ProtoTableRowSettings
	(*ProtoBoxedTableCellType)(nil),          // 11: document_elements.v1.ProtoBoxedTableCellType
	(*ProtoTableCell)(nil),                   // 12: document_elements.v1.ProtoTableCell
	(*ProtoTableCellConfig)(nil),             // 13: document_elements.v1.ProtoTableCellConfig
	(*ProtoTableCellSettings)(nil),           // 14: document_elements.v1.ProtoTableCellSettings
	(*ProtoTableWS)(nil),                     // 15: document_elements.v1.ProtoTableWS
	(*v1.ProtoMeasure)(nil),                  // 16: utils.v1.ProtoMeasure
	(*v11.ProtoBoxedBool)(nil),               // 17: box.v1.ProtoBoxedBool
	(*v11.ProtoBoxedUint32)(nil),             // 18: box.v1.ProtoBoxedUint32
	(*v1.ProtoColor)(nil),                    // 19: utils.v1.ProtoColor
	(*v1.ProtoBoxedHorizontalAlignment)(nil), // 20: utils.v1.ProtoBoxedHorizontalAlignment
	(*v1.ProtoBoxedVerticalAlignment)(nil),   // 21: utils.v1.ProtoBoxedVerticalAlignment
	(*v1.ProtoSideMeasures)(nil),             // 22: utils.v1.ProtoSideMeasures
	(*v1.ProtoSideBorders)(nil),              // 23: utils.v1.ProtoSideBorders
	(*v11.ProtoBoxedDouble)(nil),             // 24: box.v1.ProtoBoxedDouble
	(*v11.ProtoBoxedString)(nil),             // 25: box.v1.ProtoBoxedString
}
var file_document_elements_v1_table_proto_depIdxs = []int32{
	3,  // 0: document_elements.v1.ProtoTableConfig.settings:type_name -> document_elements.v1.ProtoTableSettings
	16, // 1: document_elements.v1.ProtoTableSettings.x_offset:type_name -> utils.v1.ProtoMeasure
	17, // 2: document_elements.v1.ProtoTableSettings.left_measure:type_name -> box.v1.ProtoBoxedBool
	16, // 3: document_elements.v1.ProtoTableSettings.width:type_name -> utils.v1.ProtoMeasure
	18, // 4: document_elements.v1.ProtoTableSettings.repeat_header:type_name -> box.v1.ProtoBoxedUint32
	15, // 5: document_elements.v1.ProtoTableSettings.ws:type_name -> document_elements.v1.ProtoTableWS
	0,  // 6: document_elements.v1.ProtoBoxedTableContentGroupType.value:type_name -> document_elements.v1.ProtoTableContentGroupType
	7,  // 7: document_elements.v1.ProtoTableContentGroup.settings:type_name -> document_elements.v1.ProtoTableContentGroupSettings
	7,  // 8: document_elements.v1.ProtoTableContentGroupConfig.settings:type_name -> document_elements.v1.ProtoTableContentGroupSettings
	4,  // 9: document_elements.v1.ProtoTableContentGroupSettings.content_group_type:type_name -> document_elements.v1.ProtoBoxedTableContentGroupType
	19, // 10: document_elements.v1.ProtoTableContentGroupSettings.background_colors:type_name -> utils.v1.ProtoColor
	15, // 11: document_elements.v1.ProtoTableContentGroupSettings.ws:type_name -> document_elements.v1.ProtoTableWS
	10, // 12: document_elements.v1.ProtoTableRow.settings:type_name -> document_elements.v1.ProtoTableRowSettings
	18, // 13: document_elements.v1.ProtoTableRow.row_config_number:type_name -> box.v1.ProtoBoxedUint32
	10, // 14: document_elements.v1.ProtoTableRowConfig.settings:type_name -> document_elements.v1.ProtoTableRowSettings
	16, // 15: document_elements.v1.ProtoTableRowSettings.min_height:type_name -> utils.v1.ProtoMeasure
	15, // 16: document_elements.v1.ProtoTableRowSettings.ws:type_name -> document_elements.v1.ProtoTableWS
	1,  // 17: document_elements.v1.ProtoBoxedTableCellType.value:type_name -> document_elements.v1.ProtoTableCellType
	14, // 18: document_elements.v1.ProtoTableCell.settings:type_name -> document_elements.v1.ProtoTableCellSettings
	18, // 19: document_elements.v1.ProtoTableCell.cell_config_number:type_name -> box.v1.ProtoBoxedUint32
	18, // 20: document_elements.v1.ProtoTableCell.index:type_name -> box.v1.ProtoBoxedUint32
	14, // 21: document_elements.v1.ProtoTableCellConfig.settings:type_name -> document_elements.v1.ProtoTableCellSettings
	11, // 22: document_elements.v1.ProtoTableCellConfig.cell_type:type_name -> document_elements.v1.ProtoBoxedTableCellType
	16, // 23: document_elements.v1.ProtoTableCellSettings.width:type_name -> utils.v1.ProtoMeasure
	20, // 24: document_elements.v1.ProtoTableCellSettings.align:type_name -> utils.v1.ProtoBoxedHorizontalAlignment
	21, // 25: document_elements.v1.ProtoTableCellSettings.valign:type_name -> utils.v1.ProtoBoxedVerticalAlignment
	19, // 26: document_elements.v1.ProtoTableCellSettings.background_color:type_name -> utils.v1.ProtoColor
	22, // 27: document_elements.v1.ProtoTableCellSettings.padding:type_name -> utils.v1.ProtoSideMeasures
	23, // 28: document_elements.v1.ProtoTableCellSettings.border:type_name -> utils.v1.ProtoSideBorders
	22, // 29: document_elements.v1.ProtoTableCellSettings.margin:type_name -> utils.v1.ProtoSideMeasures
	24, // 30: document_elements.v1.ProtoTableCellSettings.rotation:type_name -> box.v1.ProtoBoxedDouble
	25, // 31: document_elements.v1.ProtoTableCellSettings.default_paragraph_format:type_name -> box.v1.ProtoBoxedString
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_document_elements_v1_table_proto_init() }
func file_document_elements_v1_table_proto_init() {
	if File_document_elements_v1_table_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_document_elements_v1_table_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBoxedTableContentGroupType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableContentGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableContentGroupConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableContentGroupSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableRowConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableRowSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBoxedTableCellType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableCellConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableCellSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_table_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTableWS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_document_elements_v1_table_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_document_elements_v1_table_proto_goTypes,
		DependencyIndexes: file_document_elements_v1_table_proto_depIdxs,
		EnumInfos:         file_document_elements_v1_table_proto_enumTypes,
		MessageInfos:      file_document_elements_v1_table_proto_msgTypes,
	}.Build()
	File_document_elements_v1_table_proto = out.File
	file_document_elements_v1_table_proto_rawDesc = nil
	file_document_elements_v1_table_proto_goTypes = nil
	file_document_elements_v1_table_proto_depIdxs = nil
}
