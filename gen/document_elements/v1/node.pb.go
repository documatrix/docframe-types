// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: document_elements/v1/node.proto

package document_elementsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocumentElementType int32

const (
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT    DocumentElementType = 0
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE            DocumentElementType = 1
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRICK                      DocumentElementType = 2
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT           DocumentElementType = 3
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LINEBREAK                  DocumentElementType = 4
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LIST_SETTING               DocumentElementType = 6
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT           DocumentElementType = 7
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PARAGRAPH                  DocumentElementType = 8
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SECTION                    DocumentElementType = 9
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SPAN                       DocumentElementType = 10
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE                      DocumentElementType = 11
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CELL                 DocumentElementType = 12
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_ROW                  DocumentElementType = 13
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEMPLATE                   DocumentElementType = 15
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEXT                       DocumentElementType = 16
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_COLOR_DEF                  DocumentElementType = 19
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_IMAGE                      DocumentElementType = 30
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_NAMED_STRING               DocumentElementType = 34
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP        DocumentElementType = 35
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG               DocumentElementType = 36
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG          DocumentElementType = 37
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG           DocumentElementType = 38
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG DocumentElementType = 39
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LINK                       DocumentElementType = 40
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DIRECTORY                  DocumentElementType = 41
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEXT_BRICK                 DocumentElementType = 42
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_VARIABLE                   DocumentElementType = 44
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY           DocumentElementType = 45
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_FORMATTED                  DocumentElementType = 46
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF                DocumentElementType = 47
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF                DocumentElementType = 48
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG            DocumentElementType = 49
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG            DocumentElementType = 50
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_C_DEF                      DocumentElementType = 51
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_P_DEF                      DocumentElementType = 52
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PT_CONFIG                  DocumentElementType = 53
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_UL_CONFIG                  DocumentElementType = 54
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_NEW_PAGE                   DocumentElementType = 55
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_HEADER                     DocumentElementType = 56
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_FOOTER                     DocumentElementType = 57
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_INDENTATION                DocumentElementType = 60
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BARCODE                    DocumentElementType = 61
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_WS_AREA                    DocumentElementType = 62
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_CARRY_OVER                 DocumentElementType = 63
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SUB_TOTAL                  DocumentElementType = 64
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LOOP                       DocumentElementType = 65
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY                 DocumentElementType = 66
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_RULE                       DocumentElementType = 67
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING         DocumentElementType = 68
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LAYOUT                     DocumentElementType = 69
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_ADVANCED_ILLUSTRATION_AREA DocumentElementType = 70
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_ADJUST_HORIZONTALLY        DocumentElementType = 71
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DOCTYPE_SCRIPT             DocumentElementType = 72
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DM_SCRIPT                  DocumentElementType = 73
)

// Enum value maps for DocumentElementType.
var (
	DocumentElementType_name = map[int32]string{
		0:  "DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT",
		1:  "DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE",
		2:  "DOCUMENT_ELEMENT_TYPE_BRICK",
		3:  "DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT",
		4:  "DOCUMENT_ELEMENT_TYPE_LINEBREAK",
		6:  "DOCUMENT_ELEMENT_TYPE_LIST_SETTING",
		7:  "DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT",
		8:  "DOCUMENT_ELEMENT_TYPE_PARAGRAPH",
		9:  "DOCUMENT_ELEMENT_TYPE_SECTION",
		10: "DOCUMENT_ELEMENT_TYPE_SPAN",
		11: "DOCUMENT_ELEMENT_TYPE_TABLE",
		12: "DOCUMENT_ELEMENT_TYPE_TABLE_CELL",
		13: "DOCUMENT_ELEMENT_TYPE_TABLE_ROW",
		15: "DOCUMENT_ELEMENT_TYPE_TEMPLATE",
		16: "DOCUMENT_ELEMENT_TYPE_TEXT",
		19: "DOCUMENT_ELEMENT_TYPE_COLOR_DEF",
		30: "DOCUMENT_ELEMENT_TYPE_IMAGE",
		34: "DOCUMENT_ELEMENT_TYPE_NAMED_STRING",
		35: "DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP",
		36: "DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG",
		37: "DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG",
		38: "DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG",
		39: "DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG",
		40: "DOCUMENT_ELEMENT_TYPE_LINK",
		41: "DOCUMENT_ELEMENT_TYPE_DIRECTORY",
		42: "DOCUMENT_ELEMENT_TYPE_TEXT_BRICK",
		44: "DOCUMENT_ELEMENT_TYPE_VARIABLE",
		45: "DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY",
		46: "DOCUMENT_ELEMENT_TYPE_FORMATTED",
		47: "DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF",
		48: "DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF",
		49: "DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG",
		50: "DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG",
		51: "DOCUMENT_ELEMENT_TYPE_C_DEF",
		52: "DOCUMENT_ELEMENT_TYPE_P_DEF",
		53: "DOCUMENT_ELEMENT_TYPE_PT_CONFIG",
		54: "DOCUMENT_ELEMENT_TYPE_UL_CONFIG",
		55: "DOCUMENT_ELEMENT_TYPE_NEW_PAGE",
		56: "DOCUMENT_ELEMENT_TYPE_HEADER",
		57: "DOCUMENT_ELEMENT_TYPE_FOOTER",
		60: "DOCUMENT_ELEMENT_TYPE_INDENTATION",
		61: "DOCUMENT_ELEMENT_TYPE_BARCODE",
		62: "DOCUMENT_ELEMENT_TYPE_WS_AREA",
		63: "DOCUMENT_ELEMENT_TYPE_CARRY_OVER",
		64: "DOCUMENT_ELEMENT_TYPE_SUB_TOTAL",
		65: "DOCUMENT_ELEMENT_TYPE_LOOP",
		66: "DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY",
		67: "DOCUMENT_ELEMENT_TYPE_RULE",
		68: "DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING",
		69: "DOCUMENT_ELEMENT_TYPE_LAYOUT",
		70: "DOCUMENT_ELEMENT_TYPE_ADVANCED_ILLUSTRATION_AREA",
		71: "DOCUMENT_ELEMENT_TYPE_ADJUST_HORIZONTALLY",
		72: "DOCUMENT_ELEMENT_TYPE_DOCTYPE_SCRIPT",
		73: "DOCUMENT_ELEMENT_TYPE_DM_SCRIPT",
	}
	DocumentElementType_value = map[string]int32{
		"DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT":    0,
		"DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE":            1,
		"DOCUMENT_ELEMENT_TYPE_BRICK":                      2,
		"DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT":           3,
		"DOCUMENT_ELEMENT_TYPE_LINEBREAK":                  4,
		"DOCUMENT_ELEMENT_TYPE_LIST_SETTING":               6,
		"DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT":           7,
		"DOCUMENT_ELEMENT_TYPE_PARAGRAPH":                  8,
		"DOCUMENT_ELEMENT_TYPE_SECTION":                    9,
		"DOCUMENT_ELEMENT_TYPE_SPAN":                       10,
		"DOCUMENT_ELEMENT_TYPE_TABLE":                      11,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CELL":                 12,
		"DOCUMENT_ELEMENT_TYPE_TABLE_ROW":                  13,
		"DOCUMENT_ELEMENT_TYPE_TEMPLATE":                   15,
		"DOCUMENT_ELEMENT_TYPE_TEXT":                       16,
		"DOCUMENT_ELEMENT_TYPE_COLOR_DEF":                  19,
		"DOCUMENT_ELEMENT_TYPE_IMAGE":                      30,
		"DOCUMENT_ELEMENT_TYPE_NAMED_STRING":               34,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP":        35,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG":               36,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG":          37,
		"DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG":           38,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG": 39,
		"DOCUMENT_ELEMENT_TYPE_LINK":                       40,
		"DOCUMENT_ELEMENT_TYPE_DIRECTORY":                  41,
		"DOCUMENT_ELEMENT_TYPE_TEXT_BRICK":                 42,
		"DOCUMENT_ELEMENT_TYPE_VARIABLE":                   44,
		"DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY":           45,
		"DOCUMENT_ELEMENT_TYPE_FORMATTED":                  46,
		"DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF":                47,
		"DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF":                48,
		"DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG":            49,
		"DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG":            50,
		"DOCUMENT_ELEMENT_TYPE_C_DEF":                      51,
		"DOCUMENT_ELEMENT_TYPE_P_DEF":                      52,
		"DOCUMENT_ELEMENT_TYPE_PT_CONFIG":                  53,
		"DOCUMENT_ELEMENT_TYPE_UL_CONFIG":                  54,
		"DOCUMENT_ELEMENT_TYPE_NEW_PAGE":                   55,
		"DOCUMENT_ELEMENT_TYPE_HEADER":                     56,
		"DOCUMENT_ELEMENT_TYPE_FOOTER":                     57,
		"DOCUMENT_ELEMENT_TYPE_INDENTATION":                60,
		"DOCUMENT_ELEMENT_TYPE_BARCODE":                    61,
		"DOCUMENT_ELEMENT_TYPE_WS_AREA":                    62,
		"DOCUMENT_ELEMENT_TYPE_CARRY_OVER":                 63,
		"DOCUMENT_ELEMENT_TYPE_SUB_TOTAL":                  64,
		"DOCUMENT_ELEMENT_TYPE_LOOP":                       65,
		"DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY":                 66,
		"DOCUMENT_ELEMENT_TYPE_RULE":                       67,
		"DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING":         68,
		"DOCUMENT_ELEMENT_TYPE_LAYOUT":                     69,
		"DOCUMENT_ELEMENT_TYPE_ADVANCED_ILLUSTRATION_AREA": 70,
		"DOCUMENT_ELEMENT_TYPE_ADJUST_HORIZONTALLY":        71,
		"DOCUMENT_ELEMENT_TYPE_DOCTYPE_SCRIPT":             72,
		"DOCUMENT_ELEMENT_TYPE_DM_SCRIPT":                  73,
	}
)

func (x DocumentElementType) Enum() *DocumentElementType {
	p := new(DocumentElementType)
	*p = x
	return p
}

func (x DocumentElementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentElementType) Descriptor() protoreflect.EnumDescriptor {
	return file_document_elements_v1_node_proto_enumTypes[0].Descriptor()
}

func (DocumentElementType) Type() protoreflect.EnumType {
	return &file_document_elements_v1_node_proto_enumTypes[0]
}

func (x DocumentElementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentElementType.Descriptor instead.
func (DocumentElementType) EnumDescriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{0}
}

type Node struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Children        []*Node                `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	ComChannelUuids []string               `protobuf:"bytes,2,rep,name=com_channel_uuids,json=comChannelUuids,proto3" json:"com_channel_uuids,omitempty"`
	// Types that are valid to be assigned to Object:
	//
	//	*Node_ListSetting
	//	*Node_ColorDef
	//	*Node_Brick
	//	*Node_Template
	//	*Node_Formatted
	//	*Node_Image
	//	*Node_ParagraphFormat
	//	*Node_TextBrick
	//	*Node_Text
	//	*Node_Linebreak
	//	*Node_SpaceVertically
	//	*Node_Footer
	//	*Node_Header
	//	*Node_Table
	//	*Node_TableRow
	//	*Node_TableCell
	//	*Node_CDef
	//	*Node_PDef
	//	*Node_ApplyCDef
	//	*Node_ApplyPDef
	//	*Node_ApplyPtConfig
	//	*Node_ApplyUlConfig
	//	*Node_PtConfig
	//	*Node_UlConfig
	//	*Node_NewPage
	//	*Node_Variable
	//	*Node_NamedString
	//	*Node_Paragraph
	//	*Node_Section
	//	*Node_Span
	//	*Node_Link
	//	*Node_Directory
	//	*Node_TableContentGroup
	//	*Node_TableConfig
	//	*Node_TableCellConfig
	//	*Node_TableRowConfig
	//	*Node_TableContentGroupConfig
	//	*Node_BrickReference
	//	*Node_Indentation
	//	*Node_Barcode
	//	*Node_WsArea
	//	*Node_CarryOver
	//	*Node_SubTotal
	//	*Node_Loop
	//	*Node_LoopEntry
	//	*Node_Rule
	//	*Node_Layout
	//	*Node_AdvancedIllustrationArea
	//	*Node_AdjustHorizontally
	//	*Node_DoctypeScript
	//	*Node_DmScript
	Object        isNode_Object `protobuf_oneof:"object"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_document_elements_v1_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetChildren() []*Node {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Node) GetComChannelUuids() []string {
	if x != nil {
		return x.ComChannelUuids
	}
	return nil
}

func (x *Node) GetObject() isNode_Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *Node) GetListSetting() *ProtoListSetting {
	if x != nil {
		if x, ok := x.Object.(*Node_ListSetting); ok {
			return x.ListSetting
		}
	}
	return nil
}

func (x *Node) GetColorDef() *ProtoColorDef {
	if x != nil {
		if x, ok := x.Object.(*Node_ColorDef); ok {
			return x.ColorDef
		}
	}
	return nil
}

func (x *Node) GetBrick() *ProtoBrick {
	if x != nil {
		if x, ok := x.Object.(*Node_Brick); ok {
			return x.Brick
		}
	}
	return nil
}

func (x *Node) GetTemplate() *ProtoTemplate {
	if x != nil {
		if x, ok := x.Object.(*Node_Template); ok {
			return x.Template
		}
	}
	return nil
}

func (x *Node) GetFormatted() *ProtoFormatted {
	if x != nil {
		if x, ok := x.Object.(*Node_Formatted); ok {
			return x.Formatted
		}
	}
	return nil
}

func (x *Node) GetImage() *ProtoImage {
	if x != nil {
		if x, ok := x.Object.(*Node_Image); ok {
			return x.Image
		}
	}
	return nil
}

func (x *Node) GetParagraphFormat() *ProtoParagraphFormat {
	if x != nil {
		if x, ok := x.Object.(*Node_ParagraphFormat); ok {
			return x.ParagraphFormat
		}
	}
	return nil
}

func (x *Node) GetTextBrick() *ProtoTextBrick {
	if x != nil {
		if x, ok := x.Object.(*Node_TextBrick); ok {
			return x.TextBrick
		}
	}
	return nil
}

func (x *Node) GetText() *ProtoText {
	if x != nil {
		if x, ok := x.Object.(*Node_Text); ok {
			return x.Text
		}
	}
	return nil
}

func (x *Node) GetLinebreak() *ProtoLinebreak {
	if x != nil {
		if x, ok := x.Object.(*Node_Linebreak); ok {
			return x.Linebreak
		}
	}
	return nil
}

func (x *Node) GetSpaceVertically() *ProtoSpaceVertically {
	if x != nil {
		if x, ok := x.Object.(*Node_SpaceVertically); ok {
			return x.SpaceVertically
		}
	}
	return nil
}

func (x *Node) GetFooter() *ProtoFooter {
	if x != nil {
		if x, ok := x.Object.(*Node_Footer); ok {
			return x.Footer
		}
	}
	return nil
}

func (x *Node) GetHeader() *ProtoHeader {
	if x != nil {
		if x, ok := x.Object.(*Node_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *Node) GetTable() *ProtoTable {
	if x != nil {
		if x, ok := x.Object.(*Node_Table); ok {
			return x.Table
		}
	}
	return nil
}

func (x *Node) GetTableRow() *ProtoTableRow {
	if x != nil {
		if x, ok := x.Object.(*Node_TableRow); ok {
			return x.TableRow
		}
	}
	return nil
}

func (x *Node) GetTableCell() *ProtoTableCell {
	if x != nil {
		if x, ok := x.Object.(*Node_TableCell); ok {
			return x.TableCell
		}
	}
	return nil
}

func (x *Node) GetCDef() *ProtoCDef {
	if x != nil {
		if x, ok := x.Object.(*Node_CDef); ok {
			return x.CDef
		}
	}
	return nil
}

func (x *Node) GetPDef() *ProtoPDef {
	if x != nil {
		if x, ok := x.Object.(*Node_PDef); ok {
			return x.PDef
		}
	}
	return nil
}

func (x *Node) GetApplyCDef() *ProtoApplyProtoCDef {
	if x != nil {
		if x, ok := x.Object.(*Node_ApplyCDef); ok {
			return x.ApplyCDef
		}
	}
	return nil
}

func (x *Node) GetApplyPDef() *ProtoApplyProtoPDef {
	if x != nil {
		if x, ok := x.Object.(*Node_ApplyPDef); ok {
			return x.ApplyPDef
		}
	}
	return nil
}

func (x *Node) GetApplyPtConfig() *ProtoApplyPtConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_ApplyPtConfig); ok {
			return x.ApplyPtConfig
		}
	}
	return nil
}

func (x *Node) GetApplyUlConfig() *ProtoApplyUlConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_ApplyUlConfig); ok {
			return x.ApplyUlConfig
		}
	}
	return nil
}

func (x *Node) GetPtConfig() *ProtoPtConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_PtConfig); ok {
			return x.PtConfig
		}
	}
	return nil
}

func (x *Node) GetUlConfig() *ProtoUlConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_UlConfig); ok {
			return x.UlConfig
		}
	}
	return nil
}

func (x *Node) GetNewPage() *ProtoNewPage {
	if x != nil {
		if x, ok := x.Object.(*Node_NewPage); ok {
			return x.NewPage
		}
	}
	return nil
}

func (x *Node) GetVariable() *ProtoVariable {
	if x != nil {
		if x, ok := x.Object.(*Node_Variable); ok {
			return x.Variable
		}
	}
	return nil
}

func (x *Node) GetNamedString() *ProtoNamedString {
	if x != nil {
		if x, ok := x.Object.(*Node_NamedString); ok {
			return x.NamedString
		}
	}
	return nil
}

func (x *Node) GetParagraph() *ProtoParagraph {
	if x != nil {
		if x, ok := x.Object.(*Node_Paragraph); ok {
			return x.Paragraph
		}
	}
	return nil
}

func (x *Node) GetSection() *ProtoSection {
	if x != nil {
		if x, ok := x.Object.(*Node_Section); ok {
			return x.Section
		}
	}
	return nil
}

func (x *Node) GetSpan() *ProtoSpan {
	if x != nil {
		if x, ok := x.Object.(*Node_Span); ok {
			return x.Span
		}
	}
	return nil
}

func (x *Node) GetLink() *ProtoLink {
	if x != nil {
		if x, ok := x.Object.(*Node_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Node) GetDirectory() *ProtoDirectory {
	if x != nil {
		if x, ok := x.Object.(*Node_Directory); ok {
			return x.Directory
		}
	}
	return nil
}

func (x *Node) GetTableContentGroup() *ProtoTableContentGroup {
	if x != nil {
		if x, ok := x.Object.(*Node_TableContentGroup); ok {
			return x.TableContentGroup
		}
	}
	return nil
}

func (x *Node) GetTableConfig() *ProtoTableConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_TableConfig); ok {
			return x.TableConfig
		}
	}
	return nil
}

func (x *Node) GetTableCellConfig() *ProtoTableCellConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_TableCellConfig); ok {
			return x.TableCellConfig
		}
	}
	return nil
}

func (x *Node) GetTableRowConfig() *ProtoTableRowConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_TableRowConfig); ok {
			return x.TableRowConfig
		}
	}
	return nil
}

func (x *Node) GetTableContentGroupConfig() *ProtoTableContentGroupConfig {
	if x != nil {
		if x, ok := x.Object.(*Node_TableContentGroupConfig); ok {
			return x.TableContentGroupConfig
		}
	}
	return nil
}

func (x *Node) GetBrickReference() *ProtoBrickReference {
	if x != nil {
		if x, ok := x.Object.(*Node_BrickReference); ok {
			return x.BrickReference
		}
	}
	return nil
}

func (x *Node) GetIndentation() *ProtoIndentation {
	if x != nil {
		if x, ok := x.Object.(*Node_Indentation); ok {
			return x.Indentation
		}
	}
	return nil
}

func (x *Node) GetBarcode() *ProtoBarcode {
	if x != nil {
		if x, ok := x.Object.(*Node_Barcode); ok {
			return x.Barcode
		}
	}
	return nil
}

func (x *Node) GetWsArea() *ProtoWsArea {
	if x != nil {
		if x, ok := x.Object.(*Node_WsArea); ok {
			return x.WsArea
		}
	}
	return nil
}

func (x *Node) GetCarryOver() *ProtoCarryOver {
	if x != nil {
		if x, ok := x.Object.(*Node_CarryOver); ok {
			return x.CarryOver
		}
	}
	return nil
}

func (x *Node) GetSubTotal() *ProtoSubTotal {
	if x != nil {
		if x, ok := x.Object.(*Node_SubTotal); ok {
			return x.SubTotal
		}
	}
	return nil
}

func (x *Node) GetLoop() *ProtoLoop {
	if x != nil {
		if x, ok := x.Object.(*Node_Loop); ok {
			return x.Loop
		}
	}
	return nil
}

func (x *Node) GetLoopEntry() *ProtoLoopEntry {
	if x != nil {
		if x, ok := x.Object.(*Node_LoopEntry); ok {
			return x.LoopEntry
		}
	}
	return nil
}

func (x *Node) GetRule() *ProtoRule {
	if x != nil {
		if x, ok := x.Object.(*Node_Rule); ok {
			return x.Rule
		}
	}
	return nil
}

func (x *Node) GetLayout() *ProtoLayout {
	if x != nil {
		if x, ok := x.Object.(*Node_Layout); ok {
			return x.Layout
		}
	}
	return nil
}

func (x *Node) GetAdvancedIllustrationArea() *ProtoAdvancedIllustrationArea {
	if x != nil {
		if x, ok := x.Object.(*Node_AdvancedIllustrationArea); ok {
			return x.AdvancedIllustrationArea
		}
	}
	return nil
}

func (x *Node) GetAdjustHorizontally() *ProtoAdjustHorizontally {
	if x != nil {
		if x, ok := x.Object.(*Node_AdjustHorizontally); ok {
			return x.AdjustHorizontally
		}
	}
	return nil
}

func (x *Node) GetDoctypeScript() *ProtoDoctypeScript {
	if x != nil {
		if x, ok := x.Object.(*Node_DoctypeScript); ok {
			return x.DoctypeScript
		}
	}
	return nil
}

func (x *Node) GetDmScript() *ProtoDmScript {
	if x != nil {
		if x, ok := x.Object.(*Node_DmScript); ok {
			return x.DmScript
		}
	}
	return nil
}

type isNode_Object interface {
	isNode_Object()
}

type Node_ListSetting struct {
	ListSetting *ProtoListSetting `protobuf:"bytes,10,opt,name=list_setting,json=listSetting,proto3,oneof"`
}

type Node_ColorDef struct {
	ColorDef *ProtoColorDef `protobuf:"bytes,11,opt,name=color_def,json=colorDef,proto3,oneof"`
}

type Node_Brick struct {
	Brick *ProtoBrick `protobuf:"bytes,12,opt,name=brick,proto3,oneof"`
}

type Node_Template struct {
	Template *ProtoTemplate `protobuf:"bytes,13,opt,name=template,proto3,oneof"`
}

type Node_Formatted struct {
	Formatted *ProtoFormatted `protobuf:"bytes,14,opt,name=formatted,proto3,oneof"`
}

type Node_Image struct {
	Image *ProtoImage `protobuf:"bytes,15,opt,name=image,proto3,oneof"`
}

type Node_ParagraphFormat struct {
	ParagraphFormat *ProtoParagraphFormat `protobuf:"bytes,16,opt,name=paragraph_format,json=paragraphFormat,proto3,oneof"`
}

type Node_TextBrick struct {
	TextBrick *ProtoTextBrick `protobuf:"bytes,17,opt,name=text_brick,json=textBrick,proto3,oneof"`
}

type Node_Text struct {
	Text *ProtoText `protobuf:"bytes,18,opt,name=text,proto3,oneof"`
}

type Node_Linebreak struct {
	Linebreak *ProtoLinebreak `protobuf:"bytes,19,opt,name=linebreak,proto3,oneof"`
}

type Node_SpaceVertically struct {
	SpaceVertically *ProtoSpaceVertically `protobuf:"bytes,20,opt,name=space_vertically,json=spaceVertically,proto3,oneof"`
}

type Node_Footer struct {
	Footer *ProtoFooter `protobuf:"bytes,21,opt,name=footer,proto3,oneof"`
}

type Node_Header struct {
	Header *ProtoHeader `protobuf:"bytes,22,opt,name=header,proto3,oneof"`
}

type Node_Table struct {
	Table *ProtoTable `protobuf:"bytes,23,opt,name=table,proto3,oneof"`
}

type Node_TableRow struct {
	TableRow *ProtoTableRow `protobuf:"bytes,24,opt,name=table_row,json=tableRow,proto3,oneof"`
}

type Node_TableCell struct {
	TableCell *ProtoTableCell `protobuf:"bytes,25,opt,name=table_cell,json=tableCell,proto3,oneof"`
}

type Node_CDef struct {
	CDef *ProtoCDef `protobuf:"bytes,26,opt,name=c_def,json=cDef,proto3,oneof"`
}

type Node_PDef struct {
	PDef *ProtoPDef `protobuf:"bytes,27,opt,name=p_def,json=pDef,proto3,oneof"`
}

type Node_ApplyCDef struct {
	ApplyCDef *ProtoApplyProtoCDef `protobuf:"bytes,28,opt,name=apply_c_def,json=applyCDef,proto3,oneof"`
}

type Node_ApplyPDef struct {
	ApplyPDef *ProtoApplyProtoPDef `protobuf:"bytes,29,opt,name=apply_p_def,json=applyPDef,proto3,oneof"`
}

type Node_ApplyPtConfig struct {
	ApplyPtConfig *ProtoApplyPtConfig `protobuf:"bytes,30,opt,name=apply_pt_config,json=applyPtConfig,proto3,oneof"`
}

type Node_ApplyUlConfig struct {
	ApplyUlConfig *ProtoApplyUlConfig `protobuf:"bytes,31,opt,name=apply_ul_config,json=applyUlConfig,proto3,oneof"`
}

type Node_PtConfig struct {
	PtConfig *ProtoPtConfig `protobuf:"bytes,32,opt,name=pt_config,json=ptConfig,proto3,oneof"`
}

type Node_UlConfig struct {
	UlConfig *ProtoUlConfig `protobuf:"bytes,33,opt,name=ul_config,json=ulConfig,proto3,oneof"`
}

type Node_NewPage struct {
	NewPage *ProtoNewPage `protobuf:"bytes,34,opt,name=new_page,json=newPage,proto3,oneof"`
}

type Node_Variable struct {
	Variable *ProtoVariable `protobuf:"bytes,35,opt,name=variable,proto3,oneof"`
}

type Node_NamedString struct {
	NamedString *ProtoNamedString `protobuf:"bytes,36,opt,name=named_string,json=namedString,proto3,oneof"`
}

type Node_Paragraph struct {
	Paragraph *ProtoParagraph `protobuf:"bytes,37,opt,name=paragraph,proto3,oneof"`
}

type Node_Section struct {
	Section *ProtoSection `protobuf:"bytes,38,opt,name=section,proto3,oneof"`
}

type Node_Span struct {
	Span *ProtoSpan `protobuf:"bytes,39,opt,name=span,proto3,oneof"`
}

type Node_Link struct {
	Link *ProtoLink `protobuf:"bytes,40,opt,name=link,proto3,oneof"`
}

type Node_Directory struct {
	Directory *ProtoDirectory `protobuf:"bytes,41,opt,name=directory,proto3,oneof"`
}

type Node_TableContentGroup struct {
	TableContentGroup *ProtoTableContentGroup `protobuf:"bytes,42,opt,name=table_content_group,json=tableContentGroup,proto3,oneof"`
}

type Node_TableConfig struct {
	TableConfig *ProtoTableConfig `protobuf:"bytes,43,opt,name=table_config,json=tableConfig,proto3,oneof"`
}

type Node_TableCellConfig struct {
	TableCellConfig *ProtoTableCellConfig `protobuf:"bytes,44,opt,name=table_cell_config,json=tableCellConfig,proto3,oneof"`
}

type Node_TableRowConfig struct {
	TableRowConfig *ProtoTableRowConfig `protobuf:"bytes,45,opt,name=table_row_config,json=tableRowConfig,proto3,oneof"`
}

type Node_TableContentGroupConfig struct {
	TableContentGroupConfig *ProtoTableContentGroupConfig `protobuf:"bytes,46,opt,name=table_content_group_config,json=tableContentGroupConfig,proto3,oneof"`
}

type Node_BrickReference struct {
	BrickReference *ProtoBrickReference `protobuf:"bytes,47,opt,name=brick_reference,json=brickReference,proto3,oneof"`
}

type Node_Indentation struct {
	Indentation *ProtoIndentation `protobuf:"bytes,48,opt,name=indentation,proto3,oneof"`
}

type Node_Barcode struct {
	Barcode *ProtoBarcode `protobuf:"bytes,49,opt,name=barcode,proto3,oneof"`
}

type Node_WsArea struct {
	WsArea *ProtoWsArea `protobuf:"bytes,50,opt,name=ws_area,json=wsArea,proto3,oneof"`
}

type Node_CarryOver struct {
	CarryOver *ProtoCarryOver `protobuf:"bytes,51,opt,name=carry_over,json=carryOver,proto3,oneof"`
}

type Node_SubTotal struct {
	SubTotal *ProtoSubTotal `protobuf:"bytes,52,opt,name=sub_total,json=subTotal,proto3,oneof"`
}

type Node_Loop struct {
	Loop *ProtoLoop `protobuf:"bytes,53,opt,name=loop,proto3,oneof"`
}

type Node_LoopEntry struct {
	LoopEntry *ProtoLoopEntry `protobuf:"bytes,54,opt,name=loop_entry,json=loopEntry,proto3,oneof"`
}

type Node_Rule struct {
	Rule *ProtoRule `protobuf:"bytes,55,opt,name=rule,proto3,oneof"`
}

type Node_Layout struct {
	Layout *ProtoLayout `protobuf:"bytes,56,opt,name=layout,proto3,oneof"`
}

type Node_AdvancedIllustrationArea struct {
	AdvancedIllustrationArea *ProtoAdvancedIllustrationArea `protobuf:"bytes,57,opt,name=advanced_illustration_area,json=advancedIllustrationArea,proto3,oneof"`
}

type Node_AdjustHorizontally struct {
	AdjustHorizontally *ProtoAdjustHorizontally `protobuf:"bytes,58,opt,name=adjust_horizontally,json=adjustHorizontally,proto3,oneof"`
}

type Node_DoctypeScript struct {
	DoctypeScript *ProtoDoctypeScript `protobuf:"bytes,59,opt,name=doctypeScript,proto3,oneof"`
}

type Node_DmScript struct {
	DmScript *ProtoDmScript `protobuf:"bytes,60,opt,name=dmScript,proto3,oneof"`
}

func (*Node_ListSetting) isNode_Object() {}

func (*Node_ColorDef) isNode_Object() {}

func (*Node_Brick) isNode_Object() {}

func (*Node_Template) isNode_Object() {}

func (*Node_Formatted) isNode_Object() {}

func (*Node_Image) isNode_Object() {}

func (*Node_ParagraphFormat) isNode_Object() {}

func (*Node_TextBrick) isNode_Object() {}

func (*Node_Text) isNode_Object() {}

func (*Node_Linebreak) isNode_Object() {}

func (*Node_SpaceVertically) isNode_Object() {}

func (*Node_Footer) isNode_Object() {}

func (*Node_Header) isNode_Object() {}

func (*Node_Table) isNode_Object() {}

func (*Node_TableRow) isNode_Object() {}

func (*Node_TableCell) isNode_Object() {}

func (*Node_CDef) isNode_Object() {}

func (*Node_PDef) isNode_Object() {}

func (*Node_ApplyCDef) isNode_Object() {}

func (*Node_ApplyPDef) isNode_Object() {}

func (*Node_ApplyPtConfig) isNode_Object() {}

func (*Node_ApplyUlConfig) isNode_Object() {}

func (*Node_PtConfig) isNode_Object() {}

func (*Node_UlConfig) isNode_Object() {}

func (*Node_NewPage) isNode_Object() {}

func (*Node_Variable) isNode_Object() {}

func (*Node_NamedString) isNode_Object() {}

func (*Node_Paragraph) isNode_Object() {}

func (*Node_Section) isNode_Object() {}

func (*Node_Span) isNode_Object() {}

func (*Node_Link) isNode_Object() {}

func (*Node_Directory) isNode_Object() {}

func (*Node_TableContentGroup) isNode_Object() {}

func (*Node_TableConfig) isNode_Object() {}

func (*Node_TableCellConfig) isNode_Object() {}

func (*Node_TableRowConfig) isNode_Object() {}

func (*Node_TableContentGroupConfig) isNode_Object() {}

func (*Node_BrickReference) isNode_Object() {}

func (*Node_Indentation) isNode_Object() {}

func (*Node_Barcode) isNode_Object() {}

func (*Node_WsArea) isNode_Object() {}

func (*Node_CarryOver) isNode_Object() {}

func (*Node_SubTotal) isNode_Object() {}

func (*Node_Loop) isNode_Object() {}

func (*Node_LoopEntry) isNode_Object() {}

func (*Node_Rule) isNode_Object() {}

func (*Node_Layout) isNode_Object() {}

func (*Node_AdvancedIllustrationArea) isNode_Object() {}

func (*Node_AdjustHorizontally) isNode_Object() {}

func (*Node_DoctypeScript) isNode_Object() {}

func (*Node_DmScript) isNode_Object() {}

type ProtoTable struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Settings        *ProtoTableSettings    `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName      string                 `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	CarryOver       *Node                  `protobuf:"bytes,3,opt,name=carry_over,json=carryOver,proto3" json:"carry_over,omitempty"`
	SubTotal        *Node                  `protobuf:"bytes,4,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	ComChannelUuids []string               `protobuf:"bytes,5,rep,name=com_channel_uuids,json=comChannelUuids,proto3" json:"com_channel_uuids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ProtoTable) Reset() {
	*x = ProtoTable{}
	mi := &file_document_elements_v1_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTable) ProtoMessage() {}

func (x *ProtoTable) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTable.ProtoReflect.Descriptor instead.
func (*ProtoTable) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTable) GetSettings() *ProtoTableSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTable) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ProtoTable) GetCarryOver() *Node {
	if x != nil {
		return x.CarryOver
	}
	return nil
}

func (x *ProtoTable) GetSubTotal() *Node {
	if x != nil {
		return x.SubTotal
	}
	return nil
}

func (x *ProtoTable) GetComChannelUuids() []string {
	if x != nil {
		return x.ComChannelUuids
	}
	return nil
}

var File_document_elements_v1_node_proto protoreflect.FileDescriptor

const file_document_elements_v1_node_proto_rawDesc = "" +
	"\n" +
	"\x1fdocument_elements/v1/node.proto\x12\x14document_elements.v1\x1a.document_elements/v1/adjust_horizontally.proto\x1a5document_elements/v1/advanced_illustration_area.proto\x1a%document_elements/v1/apply_cdef.proto\x1a%document_elements/v1/apply_pdef.proto\x1a*document_elements/v1/apply_ul_config.proto\x1a*document_elements/v1/apply_pt_config.proto\x1a\"document_elements/v1/barcode.proto\x1a document_elements/v1/brick.proto\x1a*document_elements/v1/brick_reference.proto\x1a%document_elements/v1/carry_over.proto\x1a\x1fdocument_elements/v1/cdef.proto\x1a$document_elements/v1/color_def.proto\x1a$document_elements/v1/directory.proto\x1a$document_elements/v1/dm_script.proto\x1a)document_elements/v1/doctype_script.proto\x1a!document_elements/v1/footer.proto\x1a$document_elements/v1/formatted.proto\x1a!document_elements/v1/header.proto\x1a document_elements/v1/image.proto\x1a&document_elements/v1/indentation.proto\x1a!document_elements/v1/layout.proto\x1a$document_elements/v1/linebreak.proto\x1a\x1fdocument_elements/v1/link.proto\x1a'document_elements/v1/list_setting.proto\x1a\x1fdocument_elements/v1/loop.proto\x1a%document_elements/v1/loop_entry.proto\x1a'document_elements/v1/named_string.proto\x1a#document_elements/v1/new_page.proto\x1a$document_elements/v1/paragraph.proto\x1a+document_elements/v1/paragraph_format.proto\x1a\x1fdocument_elements/v1/pdef.proto\x1a$document_elements/v1/pt_config.proto\x1a\x1fdocument_elements/v1/rule.proto\x1a\"document_elements/v1/section.proto\x1a+document_elements/v1/space_vertically.proto\x1a\x1fdocument_elements/v1/span.proto\x1a$document_elements/v1/sub_total.proto\x1a document_elements/v1/table.proto\x1a#document_elements/v1/template.proto\x1a\x1fdocument_elements/v1/text.proto\x1a$document_elements/v1/textbrick.proto\x1a$document_elements/v1/ul_config.proto\x1a#document_elements/v1/variable.proto\x1a\"document_elements/v1/ws_area.proto\"\xd6\x1d\n" +
	"\x04Node\x126\n" +
	"\bchildren\x18\x01 \x03(\v2\x1a.document_elements.v1.NodeR\bchildren\x12*\n" +
	"\x11com_channel_uuids\x18\x02 \x03(\tR\x0fcomChannelUuids\x12K\n" +
	"\flist_setting\x18\n" +
	" \x01(\v2&.document_elements.v1.ProtoListSettingH\x00R\vlistSetting\x12B\n" +
	"\tcolor_def\x18\v \x01(\v2#.document_elements.v1.ProtoColorDefH\x00R\bcolorDef\x128\n" +
	"\x05brick\x18\f \x01(\v2 .document_elements.v1.ProtoBrickH\x00R\x05brick\x12A\n" +
	"\btemplate\x18\r \x01(\v2#.document_elements.v1.ProtoTemplateH\x00R\btemplate\x12D\n" +
	"\tformatted\x18\x0e \x01(\v2$.document_elements.v1.ProtoFormattedH\x00R\tformatted\x128\n" +
	"\x05image\x18\x0f \x01(\v2 .document_elements.v1.ProtoImageH\x00R\x05image\x12W\n" +
	"\x10paragraph_format\x18\x10 \x01(\v2*.document_elements.v1.ProtoParagraphFormatH\x00R\x0fparagraphFormat\x12E\n" +
	"\n" +
	"text_brick\x18\x11 \x01(\v2$.document_elements.v1.ProtoTextBrickH\x00R\ttextBrick\x125\n" +
	"\x04text\x18\x12 \x01(\v2\x1f.document_elements.v1.ProtoTextH\x00R\x04text\x12D\n" +
	"\tlinebreak\x18\x13 \x01(\v2$.document_elements.v1.ProtoLinebreakH\x00R\tlinebreak\x12W\n" +
	"\x10space_vertically\x18\x14 \x01(\v2*.document_elements.v1.ProtoSpaceVerticallyH\x00R\x0fspaceVertically\x12;\n" +
	"\x06footer\x18\x15 \x01(\v2!.document_elements.v1.ProtoFooterH\x00R\x06footer\x12;\n" +
	"\x06header\x18\x16 \x01(\v2!.document_elements.v1.ProtoHeaderH\x00R\x06header\x128\n" +
	"\x05table\x18\x17 \x01(\v2 .document_elements.v1.ProtoTableH\x00R\x05table\x12B\n" +
	"\ttable_row\x18\x18 \x01(\v2#.document_elements.v1.ProtoTableRowH\x00R\btableRow\x12E\n" +
	"\n" +
	"table_cell\x18\x19 \x01(\v2$.document_elements.v1.ProtoTableCellH\x00R\ttableCell\x126\n" +
	"\x05c_def\x18\x1a \x01(\v2\x1f.document_elements.v1.ProtoCDefH\x00R\x04cDef\x126\n" +
	"\x05p_def\x18\x1b \x01(\v2\x1f.document_elements.v1.ProtoPDefH\x00R\x04pDef\x12K\n" +
	"\vapply_c_def\x18\x1c \x01(\v2).document_elements.v1.ProtoApplyProtoCDefH\x00R\tapplyCDef\x12K\n" +
	"\vapply_p_def\x18\x1d \x01(\v2).document_elements.v1.ProtoApplyProtoPDefH\x00R\tapplyPDef\x12R\n" +
	"\x0fapply_pt_config\x18\x1e \x01(\v2(.document_elements.v1.ProtoApplyPtConfigH\x00R\rapplyPtConfig\x12R\n" +
	"\x0fapply_ul_config\x18\x1f \x01(\v2(.document_elements.v1.ProtoApplyUlConfigH\x00R\rapplyUlConfig\x12B\n" +
	"\tpt_config\x18  \x01(\v2#.document_elements.v1.ProtoPtConfigH\x00R\bptConfig\x12B\n" +
	"\tul_config\x18! \x01(\v2#.document_elements.v1.ProtoUlConfigH\x00R\bulConfig\x12?\n" +
	"\bnew_page\x18\" \x01(\v2\".document_elements.v1.ProtoNewPageH\x00R\anewPage\x12A\n" +
	"\bvariable\x18# \x01(\v2#.document_elements.v1.ProtoVariableH\x00R\bvariable\x12K\n" +
	"\fnamed_string\x18$ \x01(\v2&.document_elements.v1.ProtoNamedStringH\x00R\vnamedString\x12D\n" +
	"\tparagraph\x18% \x01(\v2$.document_elements.v1.ProtoParagraphH\x00R\tparagraph\x12>\n" +
	"\asection\x18& \x01(\v2\".document_elements.v1.ProtoSectionH\x00R\asection\x125\n" +
	"\x04span\x18' \x01(\v2\x1f.document_elements.v1.ProtoSpanH\x00R\x04span\x125\n" +
	"\x04link\x18( \x01(\v2\x1f.document_elements.v1.ProtoLinkH\x00R\x04link\x12D\n" +
	"\tdirectory\x18) \x01(\v2$.document_elements.v1.ProtoDirectoryH\x00R\tdirectory\x12^\n" +
	"\x13table_content_group\x18* \x01(\v2,.document_elements.v1.ProtoTableContentGroupH\x00R\x11tableContentGroup\x12K\n" +
	"\ftable_config\x18+ \x01(\v2&.document_elements.v1.ProtoTableConfigH\x00R\vtableConfig\x12X\n" +
	"\x11table_cell_config\x18, \x01(\v2*.document_elements.v1.ProtoTableCellConfigH\x00R\x0ftableCellConfig\x12U\n" +
	"\x10table_row_config\x18- \x01(\v2).document_elements.v1.ProtoTableRowConfigH\x00R\x0etableRowConfig\x12q\n" +
	"\x1atable_content_group_config\x18. \x01(\v22.document_elements.v1.ProtoTableContentGroupConfigH\x00R\x17tableContentGroupConfig\x12T\n" +
	"\x0fbrick_reference\x18/ \x01(\v2).document_elements.v1.ProtoBrickReferenceH\x00R\x0ebrickReference\x12J\n" +
	"\vindentation\x180 \x01(\v2&.document_elements.v1.ProtoIndentationH\x00R\vindentation\x12>\n" +
	"\abarcode\x181 \x01(\v2\".document_elements.v1.ProtoBarcodeH\x00R\abarcode\x12<\n" +
	"\aws_area\x182 \x01(\v2!.document_elements.v1.ProtoWsAreaH\x00R\x06wsArea\x12E\n" +
	"\n" +
	"carry_over\x183 \x01(\v2$.document_elements.v1.ProtoCarryOverH\x00R\tcarryOver\x12B\n" +
	"\tsub_total\x184 \x01(\v2#.document_elements.v1.ProtoSubTotalH\x00R\bsubTotal\x125\n" +
	"\x04loop\x185 \x01(\v2\x1f.document_elements.v1.ProtoLoopH\x00R\x04loop\x12E\n" +
	"\n" +
	"loop_entry\x186 \x01(\v2$.document_elements.v1.ProtoLoopEntryH\x00R\tloopEntry\x125\n" +
	"\x04rule\x187 \x01(\v2\x1f.document_elements.v1.ProtoRuleH\x00R\x04rule\x12;\n" +
	"\x06layout\x188 \x01(\v2!.document_elements.v1.ProtoLayoutH\x00R\x06layout\x12s\n" +
	"\x1aadvanced_illustration_area\x189 \x01(\v23.document_elements.v1.ProtoAdvancedIllustrationAreaH\x00R\x18advancedIllustrationArea\x12`\n" +
	"\x13adjust_horizontally\x18: \x01(\v2-.document_elements.v1.ProtoAdjustHorizontallyH\x00R\x12adjustHorizontally\x12P\n" +
	"\rdoctypeScript\x18; \x01(\v2(.document_elements.v1.ProtoDoctypeScriptH\x00R\rdoctypeScript\x12A\n" +
	"\bdmScript\x18< \x01(\v2#.document_elements.v1.ProtoDmScriptH\x00R\bdmScriptB\b\n" +
	"\x06object\"\x93\x02\n" +
	"\n" +
	"ProtoTable\x12D\n" +
	"\bsettings\x18\x01 \x01(\v2(.document_elements.v1.ProtoTableSettingsR\bsettings\x12\x1f\n" +
	"\vconfig_name\x18\x02 \x01(\tR\n" +
	"configName\x129\n" +
	"\n" +
	"carry_over\x18\x03 \x01(\v2\x1a.document_elements.v1.NodeR\tcarryOver\x127\n" +
	"\tsub_total\x18\x04 \x01(\v2\x1a.document_elements.v1.NodeR\bsubTotal\x12*\n" +
	"\x11com_channel_uuids\x18\x05 \x03(\tR\x0fcomChannelUuids*\xbf\x10\n" +
	"\x13DocumentElementType\x121\n" +
	"-DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT\x10\x00\x12)\n" +
	"%DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE\x10\x01\x12\x1f\n" +
	"\x1bDOCUMENT_ELEMENT_TYPE_BRICK\x10\x02\x12*\n" +
	"&DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT\x10\x03\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_LINEBREAK\x10\x04\x12&\n" +
	"\"DOCUMENT_ELEMENT_TYPE_LIST_SETTING\x10\x06\x12*\n" +
	"&DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT\x10\a\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_PARAGRAPH\x10\b\x12!\n" +
	"\x1dDOCUMENT_ELEMENT_TYPE_SECTION\x10\t\x12\x1e\n" +
	"\x1aDOCUMENT_ELEMENT_TYPE_SPAN\x10\n" +
	"\x12\x1f\n" +
	"\x1bDOCUMENT_ELEMENT_TYPE_TABLE\x10\v\x12$\n" +
	" DOCUMENT_ELEMENT_TYPE_TABLE_CELL\x10\f\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_TABLE_ROW\x10\r\x12\"\n" +
	"\x1eDOCUMENT_ELEMENT_TYPE_TEMPLATE\x10\x0f\x12\x1e\n" +
	"\x1aDOCUMENT_ELEMENT_TYPE_TEXT\x10\x10\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_COLOR_DEF\x10\x13\x12\x1f\n" +
	"\x1bDOCUMENT_ELEMENT_TYPE_IMAGE\x10\x1e\x12&\n" +
	"\"DOCUMENT_ELEMENT_TYPE_NAMED_STRING\x10\"\x12-\n" +
	")DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP\x10#\x12&\n" +
	"\"DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG\x10$\x12+\n" +
	"'DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG\x10%\x12*\n" +
	"&DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG\x10&\x124\n" +
	"0DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG\x10'\x12\x1e\n" +
	"\x1aDOCUMENT_ELEMENT_TYPE_LINK\x10(\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_DIRECTORY\x10)\x12$\n" +
	" DOCUMENT_ELEMENT_TYPE_TEXT_BRICK\x10*\x12\"\n" +
	"\x1eDOCUMENT_ELEMENT_TYPE_VARIABLE\x10,\x12*\n" +
	"&DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY\x10-\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_FORMATTED\x10.\x12%\n" +
	"!DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF\x10/\x12%\n" +
	"!DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF\x100\x12)\n" +
	"%DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG\x101\x12)\n" +
	"%DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG\x102\x12\x1f\n" +
	"\x1bDOCUMENT_ELEMENT_TYPE_C_DEF\x103\x12\x1f\n" +
	"\x1bDOCUMENT_ELEMENT_TYPE_P_DEF\x104\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_PT_CONFIG\x105\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_UL_CONFIG\x106\x12\"\n" +
	"\x1eDOCUMENT_ELEMENT_TYPE_NEW_PAGE\x107\x12 \n" +
	"\x1cDOCUMENT_ELEMENT_TYPE_HEADER\x108\x12 \n" +
	"\x1cDOCUMENT_ELEMENT_TYPE_FOOTER\x109\x12%\n" +
	"!DOCUMENT_ELEMENT_TYPE_INDENTATION\x10<\x12!\n" +
	"\x1dDOCUMENT_ELEMENT_TYPE_BARCODE\x10=\x12!\n" +
	"\x1dDOCUMENT_ELEMENT_TYPE_WS_AREA\x10>\x12$\n" +
	" DOCUMENT_ELEMENT_TYPE_CARRY_OVER\x10?\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_SUB_TOTAL\x10@\x12\x1e\n" +
	"\x1aDOCUMENT_ELEMENT_TYPE_LOOP\x10A\x12$\n" +
	" DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY\x10B\x12\x1e\n" +
	"\x1aDOCUMENT_ELEMENT_TYPE_RULE\x10C\x12,\n" +
	"(DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING\x10D\x12 \n" +
	"\x1cDOCUMENT_ELEMENT_TYPE_LAYOUT\x10E\x124\n" +
	"0DOCUMENT_ELEMENT_TYPE_ADVANCED_ILLUSTRATION_AREA\x10F\x12-\n" +
	")DOCUMENT_ELEMENT_TYPE_ADJUST_HORIZONTALLY\x10G\x12(\n" +
	"$DOCUMENT_ELEMENT_TYPE_DOCTYPE_SCRIPT\x10H\x12#\n" +
	"\x1fDOCUMENT_ELEMENT_TYPE_DM_SCRIPT\x10IB\xe5\x01\n" +
	"\x18com.document_elements.v1B\tNodeProtoP\x01ZQgithub.com/documatrix/docframe-types/gen/document_elements/v1;document_elementsv1\xa2\x02\x03DXX\xaa\x02\x13DocumentElements.V1\xca\x02\x13DocumentElements\\V1\xe2\x02\x1fDocumentElements\\V1\\GPBMetadata\xea\x02\x14DocumentElements::V1b\x06proto3"

var (
	file_document_elements_v1_node_proto_rawDescOnce sync.Once
	file_document_elements_v1_node_proto_rawDescData []byte
)

func file_document_elements_v1_node_proto_rawDescGZIP() []byte {
	file_document_elements_v1_node_proto_rawDescOnce.Do(func() {
		file_document_elements_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_document_elements_v1_node_proto_rawDesc), len(file_document_elements_v1_node_proto_rawDesc)))
	})
	return file_document_elements_v1_node_proto_rawDescData
}

var file_document_elements_v1_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_document_elements_v1_node_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_document_elements_v1_node_proto_goTypes = []any{
	(DocumentElementType)(0),              // 0: document_elements.v1.DocumentElementType
	(*Node)(nil),                          // 1: document_elements.v1.Node
	(*ProtoTable)(nil),                    // 2: document_elements.v1.ProtoTable
	(*ProtoListSetting)(nil),              // 3: document_elements.v1.ProtoListSetting
	(*ProtoColorDef)(nil),                 // 4: document_elements.v1.ProtoColorDef
	(*ProtoBrick)(nil),                    // 5: document_elements.v1.ProtoBrick
	(*ProtoTemplate)(nil),                 // 6: document_elements.v1.ProtoTemplate
	(*ProtoFormatted)(nil),                // 7: document_elements.v1.ProtoFormatted
	(*ProtoImage)(nil),                    // 8: document_elements.v1.ProtoImage
	(*ProtoParagraphFormat)(nil),          // 9: document_elements.v1.ProtoParagraphFormat
	(*ProtoTextBrick)(nil),                // 10: document_elements.v1.ProtoTextBrick
	(*ProtoText)(nil),                     // 11: document_elements.v1.ProtoText
	(*ProtoLinebreak)(nil),                // 12: document_elements.v1.ProtoLinebreak
	(*ProtoSpaceVertically)(nil),          // 13: document_elements.v1.ProtoSpaceVertically
	(*ProtoFooter)(nil),                   // 14: document_elements.v1.ProtoFooter
	(*ProtoHeader)(nil),                   // 15: document_elements.v1.ProtoHeader
	(*ProtoTableRow)(nil),                 // 16: document_elements.v1.ProtoTableRow
	(*ProtoTableCell)(nil),                // 17: document_elements.v1.ProtoTableCell
	(*ProtoCDef)(nil),                     // 18: document_elements.v1.ProtoCDef
	(*ProtoPDef)(nil),                     // 19: document_elements.v1.ProtoPDef
	(*ProtoApplyProtoCDef)(nil),           // 20: document_elements.v1.ProtoApplyProtoCDef
	(*ProtoApplyProtoPDef)(nil),           // 21: document_elements.v1.ProtoApplyProtoPDef
	(*ProtoApplyPtConfig)(nil),            // 22: document_elements.v1.ProtoApplyPtConfig
	(*ProtoApplyUlConfig)(nil),            // 23: document_elements.v1.ProtoApplyUlConfig
	(*ProtoPtConfig)(nil),                 // 24: document_elements.v1.ProtoPtConfig
	(*ProtoUlConfig)(nil),                 // 25: document_elements.v1.ProtoUlConfig
	(*ProtoNewPage)(nil),                  // 26: document_elements.v1.ProtoNewPage
	(*ProtoVariable)(nil),                 // 27: document_elements.v1.ProtoVariable
	(*ProtoNamedString)(nil),              // 28: document_elements.v1.ProtoNamedString
	(*ProtoParagraph)(nil),                // 29: document_elements.v1.ProtoParagraph
	(*ProtoSection)(nil),                  // 30: document_elements.v1.ProtoSection
	(*ProtoSpan)(nil),                     // 31: document_elements.v1.ProtoSpan
	(*ProtoLink)(nil),                     // 32: document_elements.v1.ProtoLink
	(*ProtoDirectory)(nil),                // 33: document_elements.v1.ProtoDirectory
	(*ProtoTableContentGroup)(nil),        // 34: document_elements.v1.ProtoTableContentGroup
	(*ProtoTableConfig)(nil),              // 35: document_elements.v1.ProtoTableConfig
	(*ProtoTableCellConfig)(nil),          // 36: document_elements.v1.ProtoTableCellConfig
	(*ProtoTableRowConfig)(nil),           // 37: document_elements.v1.ProtoTableRowConfig
	(*ProtoTableContentGroupConfig)(nil),  // 38: document_elements.v1.ProtoTableContentGroupConfig
	(*ProtoBrickReference)(nil),           // 39: document_elements.v1.ProtoBrickReference
	(*ProtoIndentation)(nil),              // 40: document_elements.v1.ProtoIndentation
	(*ProtoBarcode)(nil),                  // 41: document_elements.v1.ProtoBarcode
	(*ProtoWsArea)(nil),                   // 42: document_elements.v1.ProtoWsArea
	(*ProtoCarryOver)(nil),                // 43: document_elements.v1.ProtoCarryOver
	(*ProtoSubTotal)(nil),                 // 44: document_elements.v1.ProtoSubTotal
	(*ProtoLoop)(nil),                     // 45: document_elements.v1.ProtoLoop
	(*ProtoLoopEntry)(nil),                // 46: document_elements.v1.ProtoLoopEntry
	(*ProtoRule)(nil),                     // 47: document_elements.v1.ProtoRule
	(*ProtoLayout)(nil),                   // 48: document_elements.v1.ProtoLayout
	(*ProtoAdvancedIllustrationArea)(nil), // 49: document_elements.v1.ProtoAdvancedIllustrationArea
	(*ProtoAdjustHorizontally)(nil),       // 50: document_elements.v1.ProtoAdjustHorizontally
	(*ProtoDoctypeScript)(nil),            // 51: document_elements.v1.ProtoDoctypeScript
	(*ProtoDmScript)(nil),                 // 52: document_elements.v1.ProtoDmScript
	(*ProtoTableSettings)(nil),            // 53: document_elements.v1.ProtoTableSettings
}
var file_document_elements_v1_node_proto_depIdxs = []int32{
	1,  // 0: document_elements.v1.Node.children:type_name -> document_elements.v1.Node
	3,  // 1: document_elements.v1.Node.list_setting:type_name -> document_elements.v1.ProtoListSetting
	4,  // 2: document_elements.v1.Node.color_def:type_name -> document_elements.v1.ProtoColorDef
	5,  // 3: document_elements.v1.Node.brick:type_name -> document_elements.v1.ProtoBrick
	6,  // 4: document_elements.v1.Node.template:type_name -> document_elements.v1.ProtoTemplate
	7,  // 5: document_elements.v1.Node.formatted:type_name -> document_elements.v1.ProtoFormatted
	8,  // 6: document_elements.v1.Node.image:type_name -> document_elements.v1.ProtoImage
	9,  // 7: document_elements.v1.Node.paragraph_format:type_name -> document_elements.v1.ProtoParagraphFormat
	10, // 8: document_elements.v1.Node.text_brick:type_name -> document_elements.v1.ProtoTextBrick
	11, // 9: document_elements.v1.Node.text:type_name -> document_elements.v1.ProtoText
	12, // 10: document_elements.v1.Node.linebreak:type_name -> document_elements.v1.ProtoLinebreak
	13, // 11: document_elements.v1.Node.space_vertically:type_name -> document_elements.v1.ProtoSpaceVertically
	14, // 12: document_elements.v1.Node.footer:type_name -> document_elements.v1.ProtoFooter
	15, // 13: document_elements.v1.Node.header:type_name -> document_elements.v1.ProtoHeader
	2,  // 14: document_elements.v1.Node.table:type_name -> document_elements.v1.ProtoTable
	16, // 15: document_elements.v1.Node.table_row:type_name -> document_elements.v1.ProtoTableRow
	17, // 16: document_elements.v1.Node.table_cell:type_name -> document_elements.v1.ProtoTableCell
	18, // 17: document_elements.v1.Node.c_def:type_name -> document_elements.v1.ProtoCDef
	19, // 18: document_elements.v1.Node.p_def:type_name -> document_elements.v1.ProtoPDef
	20, // 19: document_elements.v1.Node.apply_c_def:type_name -> document_elements.v1.ProtoApplyProtoCDef
	21, // 20: document_elements.v1.Node.apply_p_def:type_name -> document_elements.v1.ProtoApplyProtoPDef
	22, // 21: document_elements.v1.Node.apply_pt_config:type_name -> document_elements.v1.ProtoApplyPtConfig
	23, // 22: document_elements.v1.Node.apply_ul_config:type_name -> document_elements.v1.ProtoApplyUlConfig
	24, // 23: document_elements.v1.Node.pt_config:type_name -> document_elements.v1.ProtoPtConfig
	25, // 24: document_elements.v1.Node.ul_config:type_name -> document_elements.v1.ProtoUlConfig
	26, // 25: document_elements.v1.Node.new_page:type_name -> document_elements.v1.ProtoNewPage
	27, // 26: document_elements.v1.Node.variable:type_name -> document_elements.v1.ProtoVariable
	28, // 27: document_elements.v1.Node.named_string:type_name -> document_elements.v1.ProtoNamedString
	29, // 28: document_elements.v1.Node.paragraph:type_name -> document_elements.v1.ProtoParagraph
	30, // 29: document_elements.v1.Node.section:type_name -> document_elements.v1.ProtoSection
	31, // 30: document_elements.v1.Node.span:type_name -> document_elements.v1.ProtoSpan
	32, // 31: document_elements.v1.Node.link:type_name -> document_elements.v1.ProtoLink
	33, // 32: document_elements.v1.Node.directory:type_name -> document_elements.v1.ProtoDirectory
	34, // 33: document_elements.v1.Node.table_content_group:type_name -> document_elements.v1.ProtoTableContentGroup
	35, // 34: document_elements.v1.Node.table_config:type_name -> document_elements.v1.ProtoTableConfig
	36, // 35: document_elements.v1.Node.table_cell_config:type_name -> document_elements.v1.ProtoTableCellConfig
	37, // 36: document_elements.v1.Node.table_row_config:type_name -> document_elements.v1.ProtoTableRowConfig
	38, // 37: document_elements.v1.Node.table_content_group_config:type_name -> document_elements.v1.ProtoTableContentGroupConfig
	39, // 38: document_elements.v1.Node.brick_reference:type_name -> document_elements.v1.ProtoBrickReference
	40, // 39: document_elements.v1.Node.indentation:type_name -> document_elements.v1.ProtoIndentation
	41, // 40: document_elements.v1.Node.barcode:type_name -> document_elements.v1.ProtoBarcode
	42, // 41: document_elements.v1.Node.ws_area:type_name -> document_elements.v1.ProtoWsArea
	43, // 42: document_elements.v1.Node.carry_over:type_name -> document_elements.v1.ProtoCarryOver
	44, // 43: document_elements.v1.Node.sub_total:type_name -> document_elements.v1.ProtoSubTotal
	45, // 44: document_elements.v1.Node.loop:type_name -> document_elements.v1.ProtoLoop
	46, // 45: document_elements.v1.Node.loop_entry:type_name -> document_elements.v1.ProtoLoopEntry
	47, // 46: document_elements.v1.Node.rule:type_name -> document_elements.v1.ProtoRule
	48, // 47: document_elements.v1.Node.layout:type_name -> document_elements.v1.ProtoLayout
	49, // 48: document_elements.v1.Node.advanced_illustration_area:type_name -> document_elements.v1.ProtoAdvancedIllustrationArea
	50, // 49: document_elements.v1.Node.adjust_horizontally:type_name -> document_elements.v1.ProtoAdjustHorizontally
	51, // 50: document_elements.v1.Node.doctypeScript:type_name -> document_elements.v1.ProtoDoctypeScript
	52, // 51: document_elements.v1.Node.dmScript:type_name -> document_elements.v1.ProtoDmScript
	53, // 52: document_elements.v1.ProtoTable.settings:type_name -> document_elements.v1.ProtoTableSettings
	1,  // 53: document_elements.v1.ProtoTable.carry_over:type_name -> document_elements.v1.Node
	1,  // 54: document_elements.v1.ProtoTable.sub_total:type_name -> document_elements.v1.Node
	55, // [55:55] is the sub-list for method output_type
	55, // [55:55] is the sub-list for method input_type
	55, // [55:55] is the sub-list for extension type_name
	55, // [55:55] is the sub-list for extension extendee
	0,  // [0:55] is the sub-list for field type_name
}

func init() { file_document_elements_v1_node_proto_init() }
func file_document_elements_v1_node_proto_init() {
	if File_document_elements_v1_node_proto != nil {
		return
	}
	file_document_elements_v1_adjust_horizontally_proto_init()
	file_document_elements_v1_advanced_illustration_area_proto_init()
	file_document_elements_v1_apply_cdef_proto_init()
	file_document_elements_v1_apply_pdef_proto_init()
	file_document_elements_v1_apply_ul_config_proto_init()
	file_document_elements_v1_apply_pt_config_proto_init()
	file_document_elements_v1_barcode_proto_init()
	file_document_elements_v1_brick_proto_init()
	file_document_elements_v1_brick_reference_proto_init()
	file_document_elements_v1_carry_over_proto_init()
	file_document_elements_v1_cdef_proto_init()
	file_document_elements_v1_color_def_proto_init()
	file_document_elements_v1_directory_proto_init()
	file_document_elements_v1_dm_script_proto_init()
	file_document_elements_v1_doctype_script_proto_init()
	file_document_elements_v1_footer_proto_init()
	file_document_elements_v1_formatted_proto_init()
	file_document_elements_v1_header_proto_init()
	file_document_elements_v1_image_proto_init()
	file_document_elements_v1_indentation_proto_init()
	file_document_elements_v1_layout_proto_init()
	file_document_elements_v1_linebreak_proto_init()
	file_document_elements_v1_link_proto_init()
	file_document_elements_v1_list_setting_proto_init()
	file_document_elements_v1_loop_proto_init()
	file_document_elements_v1_loop_entry_proto_init()
	file_document_elements_v1_named_string_proto_init()
	file_document_elements_v1_new_page_proto_init()
	file_document_elements_v1_paragraph_proto_init()
	file_document_elements_v1_paragraph_format_proto_init()
	file_document_elements_v1_pdef_proto_init()
	file_document_elements_v1_pt_config_proto_init()
	file_document_elements_v1_rule_proto_init()
	file_document_elements_v1_section_proto_init()
	file_document_elements_v1_space_vertically_proto_init()
	file_document_elements_v1_span_proto_init()
	file_document_elements_v1_sub_total_proto_init()
	file_document_elements_v1_table_proto_init()
	file_document_elements_v1_template_proto_init()
	file_document_elements_v1_text_proto_init()
	file_document_elements_v1_textbrick_proto_init()
	file_document_elements_v1_ul_config_proto_init()
	file_document_elements_v1_variable_proto_init()
	file_document_elements_v1_ws_area_proto_init()
	file_document_elements_v1_node_proto_msgTypes[0].OneofWrappers = []any{
		(*Node_ListSetting)(nil),
		(*Node_ColorDef)(nil),
		(*Node_Brick)(nil),
		(*Node_Template)(nil),
		(*Node_Formatted)(nil),
		(*Node_Image)(nil),
		(*Node_ParagraphFormat)(nil),
		(*Node_TextBrick)(nil),
		(*Node_Text)(nil),
		(*Node_Linebreak)(nil),
		(*Node_SpaceVertically)(nil),
		(*Node_Footer)(nil),
		(*Node_Header)(nil),
		(*Node_Table)(nil),
		(*Node_TableRow)(nil),
		(*Node_TableCell)(nil),
		(*Node_CDef)(nil),
		(*Node_PDef)(nil),
		(*Node_ApplyCDef)(nil),
		(*Node_ApplyPDef)(nil),
		(*Node_ApplyPtConfig)(nil),
		(*Node_ApplyUlConfig)(nil),
		(*Node_PtConfig)(nil),
		(*Node_UlConfig)(nil),
		(*Node_NewPage)(nil),
		(*Node_Variable)(nil),
		(*Node_NamedString)(nil),
		(*Node_Paragraph)(nil),
		(*Node_Section)(nil),
		(*Node_Span)(nil),
		(*Node_Link)(nil),
		(*Node_Directory)(nil),
		(*Node_TableContentGroup)(nil),
		(*Node_TableConfig)(nil),
		(*Node_TableCellConfig)(nil),
		(*Node_TableRowConfig)(nil),
		(*Node_TableContentGroupConfig)(nil),
		(*Node_BrickReference)(nil),
		(*Node_Indentation)(nil),
		(*Node_Barcode)(nil),
		(*Node_WsArea)(nil),
		(*Node_CarryOver)(nil),
		(*Node_SubTotal)(nil),
		(*Node_Loop)(nil),
		(*Node_LoopEntry)(nil),
		(*Node_Rule)(nil),
		(*Node_Layout)(nil),
		(*Node_AdvancedIllustrationArea)(nil),
		(*Node_AdjustHorizontally)(nil),
		(*Node_DoctypeScript)(nil),
		(*Node_DmScript)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_document_elements_v1_node_proto_rawDesc), len(file_document_elements_v1_node_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_document_elements_v1_node_proto_goTypes,
		DependencyIndexes: file_document_elements_v1_node_proto_depIdxs,
		EnumInfos:         file_document_elements_v1_node_proto_enumTypes,
		MessageInfos:      file_document_elements_v1_node_proto_msgTypes,
	}.Build()
	File_document_elements_v1_node_proto = out.File
	file_document_elements_v1_node_proto_goTypes = nil
	file_document_elements_v1_node_proto_depIdxs = nil
}
