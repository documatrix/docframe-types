// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: document_elements/v1/node.proto

package document_elementsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DocumentElementType int32

const (
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT    DocumentElementType = 0
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE            DocumentElementType = 1
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BRICK                      DocumentElementType = 2
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT           DocumentElementType = 3
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LINEBREAK                  DocumentElementType = 4
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LIST_SETTING               DocumentElementType = 6
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT           DocumentElementType = 7
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PARAGRAPH                  DocumentElementType = 8
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SECTION                    DocumentElementType = 9
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SPAN                       DocumentElementType = 10
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE                      DocumentElementType = 11
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CELL                 DocumentElementType = 12
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_ROW                  DocumentElementType = 13
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEMPLATE                   DocumentElementType = 15
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEXT                       DocumentElementType = 16
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_COLOR_DEF                  DocumentElementType = 19
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_IMAGE                      DocumentElementType = 30
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_NAMED_STRING               DocumentElementType = 34
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP        DocumentElementType = 35
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG               DocumentElementType = 36
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG          DocumentElementType = 37
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG           DocumentElementType = 38
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG DocumentElementType = 39
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LINK                       DocumentElementType = 40
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_DIRECTORY                  DocumentElementType = 41
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_TEXT_BRICK                 DocumentElementType = 42
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_VARIABLE                   DocumentElementType = 44
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY           DocumentElementType = 45
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_FORMATTED                  DocumentElementType = 46
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF                DocumentElementType = 47
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF                DocumentElementType = 48
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG            DocumentElementType = 49
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG            DocumentElementType = 50
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_C_DEF                      DocumentElementType = 51
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_P_DEF                      DocumentElementType = 52
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_PT_CONFIG                  DocumentElementType = 53
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_UL_CONFIG                  DocumentElementType = 54
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_NEW_PAGE                   DocumentElementType = 55
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_HEADER                     DocumentElementType = 56
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_FOOTER                     DocumentElementType = 57
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_INDENTATION                DocumentElementType = 60
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_BARCODE                    DocumentElementType = 61
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_WS_AREA                    DocumentElementType = 62
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_CARRY_OVER                 DocumentElementType = 63
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_SUB_TOTAL                  DocumentElementType = 64
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LOOP                       DocumentElementType = 65
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY                 DocumentElementType = 66
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_RULE                       DocumentElementType = 67
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING         DocumentElementType = 68
	DocumentElementType_DOCUMENT_ELEMENT_TYPE_LAYOUT                     DocumentElementType = 69
)

// Enum value maps for DocumentElementType.
var (
	DocumentElementType_name = map[int32]string{
		0:  "DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT",
		1:  "DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE",
		2:  "DOCUMENT_ELEMENT_TYPE_BRICK",
		3:  "DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT",
		4:  "DOCUMENT_ELEMENT_TYPE_LINEBREAK",
		6:  "DOCUMENT_ELEMENT_TYPE_LIST_SETTING",
		7:  "DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT",
		8:  "DOCUMENT_ELEMENT_TYPE_PARAGRAPH",
		9:  "DOCUMENT_ELEMENT_TYPE_SECTION",
		10: "DOCUMENT_ELEMENT_TYPE_SPAN",
		11: "DOCUMENT_ELEMENT_TYPE_TABLE",
		12: "DOCUMENT_ELEMENT_TYPE_TABLE_CELL",
		13: "DOCUMENT_ELEMENT_TYPE_TABLE_ROW",
		15: "DOCUMENT_ELEMENT_TYPE_TEMPLATE",
		16: "DOCUMENT_ELEMENT_TYPE_TEXT",
		19: "DOCUMENT_ELEMENT_TYPE_COLOR_DEF",
		30: "DOCUMENT_ELEMENT_TYPE_IMAGE",
		34: "DOCUMENT_ELEMENT_TYPE_NAMED_STRING",
		35: "DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP",
		36: "DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG",
		37: "DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG",
		38: "DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG",
		39: "DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG",
		40: "DOCUMENT_ELEMENT_TYPE_LINK",
		41: "DOCUMENT_ELEMENT_TYPE_DIRECTORY",
		42: "DOCUMENT_ELEMENT_TYPE_TEXT_BRICK",
		44: "DOCUMENT_ELEMENT_TYPE_VARIABLE",
		45: "DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY",
		46: "DOCUMENT_ELEMENT_TYPE_FORMATTED",
		47: "DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF",
		48: "DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF",
		49: "DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG",
		50: "DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG",
		51: "DOCUMENT_ELEMENT_TYPE_C_DEF",
		52: "DOCUMENT_ELEMENT_TYPE_P_DEF",
		53: "DOCUMENT_ELEMENT_TYPE_PT_CONFIG",
		54: "DOCUMENT_ELEMENT_TYPE_UL_CONFIG",
		55: "DOCUMENT_ELEMENT_TYPE_NEW_PAGE",
		56: "DOCUMENT_ELEMENT_TYPE_HEADER",
		57: "DOCUMENT_ELEMENT_TYPE_FOOTER",
		60: "DOCUMENT_ELEMENT_TYPE_INDENTATION",
		61: "DOCUMENT_ELEMENT_TYPE_BARCODE",
		62: "DOCUMENT_ELEMENT_TYPE_WS_AREA",
		63: "DOCUMENT_ELEMENT_TYPE_CARRY_OVER",
		64: "DOCUMENT_ELEMENT_TYPE_SUB_TOTAL",
		65: "DOCUMENT_ELEMENT_TYPE_LOOP",
		66: "DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY",
		67: "DOCUMENT_ELEMENT_TYPE_RULE",
		68: "DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING",
		69: "DOCUMENT_ELEMENT_TYPE_LAYOUT",
	}
	DocumentElementType_value = map[string]int32{
		"DOCUMENT_ELEMENT_TYPE_BRANCH_DOCUMENT_ELEMENT":    0,
		"DOCUMENT_ELEMENT_TYPE_BRICK_REFERENCE":            1,
		"DOCUMENT_ELEMENT_TYPE_BRICK":                      2,
		"DOCUMENT_ELEMENT_TYPE_DOCUMENT_ELEMENT":           3,
		"DOCUMENT_ELEMENT_TYPE_LINEBREAK":                  4,
		"DOCUMENT_ELEMENT_TYPE_LIST_SETTING":               6,
		"DOCUMENT_ELEMENT_TYPE_PARAGRAPH_FORMAT":           7,
		"DOCUMENT_ELEMENT_TYPE_PARAGRAPH":                  8,
		"DOCUMENT_ELEMENT_TYPE_SECTION":                    9,
		"DOCUMENT_ELEMENT_TYPE_SPAN":                       10,
		"DOCUMENT_ELEMENT_TYPE_TABLE":                      11,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CELL":                 12,
		"DOCUMENT_ELEMENT_TYPE_TABLE_ROW":                  13,
		"DOCUMENT_ELEMENT_TYPE_TEMPLATE":                   15,
		"DOCUMENT_ELEMENT_TYPE_TEXT":                       16,
		"DOCUMENT_ELEMENT_TYPE_COLOR_DEF":                  19,
		"DOCUMENT_ELEMENT_TYPE_IMAGE":                      30,
		"DOCUMENT_ELEMENT_TYPE_NAMED_STRING":               34,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP":        35,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONFIG":               36,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CELL_CONFIG":          37,
		"DOCUMENT_ELEMENT_TYPE_TABLE_ROW_CONFIG":           38,
		"DOCUMENT_ELEMENT_TYPE_TABLE_CONTENT_GROUP_CONFIG": 39,
		"DOCUMENT_ELEMENT_TYPE_LINK":                       40,
		"DOCUMENT_ELEMENT_TYPE_DIRECTORY":                  41,
		"DOCUMENT_ELEMENT_TYPE_TEXT_BRICK":                 42,
		"DOCUMENT_ELEMENT_TYPE_VARIABLE":                   44,
		"DOCUMENT_ELEMENT_TYPE_SPACE_VERTICALLY":           45,
		"DOCUMENT_ELEMENT_TYPE_FORMATTED":                  46,
		"DOCUMENT_ELEMENT_TYPE_APPLY_C_DEF":                47,
		"DOCUMENT_ELEMENT_TYPE_APPLY_P_DEF":                48,
		"DOCUMENT_ELEMENT_TYPE_APPLY_PT_CONFIG":            49,
		"DOCUMENT_ELEMENT_TYPE_APPLY_UL_CONFIG":            50,
		"DOCUMENT_ELEMENT_TYPE_C_DEF":                      51,
		"DOCUMENT_ELEMENT_TYPE_P_DEF":                      52,
		"DOCUMENT_ELEMENT_TYPE_PT_CONFIG":                  53,
		"DOCUMENT_ELEMENT_TYPE_UL_CONFIG":                  54,
		"DOCUMENT_ELEMENT_TYPE_NEW_PAGE":                   55,
		"DOCUMENT_ELEMENT_TYPE_HEADER":                     56,
		"DOCUMENT_ELEMENT_TYPE_FOOTER":                     57,
		"DOCUMENT_ELEMENT_TYPE_INDENTATION":                60,
		"DOCUMENT_ELEMENT_TYPE_BARCODE":                    61,
		"DOCUMENT_ELEMENT_TYPE_WS_AREA":                    62,
		"DOCUMENT_ELEMENT_TYPE_CARRY_OVER":                 63,
		"DOCUMENT_ELEMENT_TYPE_SUB_TOTAL":                  64,
		"DOCUMENT_ELEMENT_TYPE_LOOP":                       65,
		"DOCUMENT_ELEMENT_TYPE_LOOP_ENTRY":                 66,
		"DOCUMENT_ELEMENT_TYPE_RULE":                       67,
		"DOCUMENT_ELEMENT_TYPE_LIST_LEVEL_SETTING":         68,
		"DOCUMENT_ELEMENT_TYPE_LAYOUT":                     69,
	}
)

func (x DocumentElementType) Enum() *DocumentElementType {
	p := new(DocumentElementType)
	*p = x
	return p
}

func (x DocumentElementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentElementType) Descriptor() protoreflect.EnumDescriptor {
	return file_document_elements_v1_node_proto_enumTypes[0].Descriptor()
}

func (DocumentElementType) Type() protoreflect.EnumType {
	return &file_document_elements_v1_node_proto_enumTypes[0]
}

func (x DocumentElementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentElementType.Descriptor instead.
func (DocumentElementType) EnumDescriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{0}
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Children []*Node `protobuf:"bytes,1,rep,name=children,proto3" json:"children,omitempty"`
	// Types that are assignable to Object:
	//
	//	*Node_ListSetting
	//	*Node_ColorDef
	//	*Node_Brick
	//	*Node_Template
	//	*Node_Formatted
	//	*Node_Image
	//	*Node_ParagraphFormat
	//	*Node_TextBrick
	//	*Node_Text
	//	*Node_Linebreak
	//	*Node_SpaceVertically
	//	*Node_Footer
	//	*Node_Header
	//	*Node_Table
	//	*Node_TableRow
	//	*Node_TableCell
	//	*Node_CDef
	//	*Node_PDef
	//	*Node_ApplyCDef
	//	*Node_ApplyPDef
	//	*Node_ApplyPtConfig
	//	*Node_ApplyUlConfig
	//	*Node_PtConfig
	//	*Node_UlConfig
	//	*Node_NewPage
	//	*Node_Variable
	//	*Node_NamedString
	//	*Node_Paragraph
	//	*Node_Section
	//	*Node_Span
	//	*Node_Link
	//	*Node_Directory
	//	*Node_TableContentGroup
	//	*Node_TableConfig
	//	*Node_TableCellConfig
	//	*Node_TableRowConfig
	//	*Node_TableContentGroupConfig
	//	*Node_BrickReference
	//	*Node_Indentation
	//	*Node_Barcode
	//	*Node_WsArea
	//	*Node_CarryOver
	//	*Node_SubTotal
	//	*Node_Loop
	//	*Node_LoopEntry
	//	*Node_Rule
	//	*Node_Layout
	Object isNode_Object `protobuf_oneof:"object"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetChildren() []*Node {
	if x != nil {
		return x.Children
	}
	return nil
}

func (m *Node) GetObject() isNode_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (x *Node) GetListSetting() *ProtoListSetting {
	if x, ok := x.GetObject().(*Node_ListSetting); ok {
		return x.ListSetting
	}
	return nil
}

func (x *Node) GetColorDef() *ProtoColorDef {
	if x, ok := x.GetObject().(*Node_ColorDef); ok {
		return x.ColorDef
	}
	return nil
}

func (x *Node) GetBrick() *ProtoBrick {
	if x, ok := x.GetObject().(*Node_Brick); ok {
		return x.Brick
	}
	return nil
}

func (x *Node) GetTemplate() *ProtoTemplate {
	if x, ok := x.GetObject().(*Node_Template); ok {
		return x.Template
	}
	return nil
}

func (x *Node) GetFormatted() *ProtoFormatted {
	if x, ok := x.GetObject().(*Node_Formatted); ok {
		return x.Formatted
	}
	return nil
}

func (x *Node) GetImage() *ProtoImage {
	if x, ok := x.GetObject().(*Node_Image); ok {
		return x.Image
	}
	return nil
}

func (x *Node) GetParagraphFormat() *ProtoParagraphFormat {
	if x, ok := x.GetObject().(*Node_ParagraphFormat); ok {
		return x.ParagraphFormat
	}
	return nil
}

func (x *Node) GetTextBrick() *ProtoTextBrick {
	if x, ok := x.GetObject().(*Node_TextBrick); ok {
		return x.TextBrick
	}
	return nil
}

func (x *Node) GetText() *ProtoText {
	if x, ok := x.GetObject().(*Node_Text); ok {
		return x.Text
	}
	return nil
}

func (x *Node) GetLinebreak() *ProtoLinebreak {
	if x, ok := x.GetObject().(*Node_Linebreak); ok {
		return x.Linebreak
	}
	return nil
}

func (x *Node) GetSpaceVertically() *ProtoSpaceVertically {
	if x, ok := x.GetObject().(*Node_SpaceVertically); ok {
		return x.SpaceVertically
	}
	return nil
}

func (x *Node) GetFooter() *ProtoFooter {
	if x, ok := x.GetObject().(*Node_Footer); ok {
		return x.Footer
	}
	return nil
}

func (x *Node) GetHeader() *ProtoHeader {
	if x, ok := x.GetObject().(*Node_Header); ok {
		return x.Header
	}
	return nil
}

func (x *Node) GetTable() *ProtoTable {
	if x, ok := x.GetObject().(*Node_Table); ok {
		return x.Table
	}
	return nil
}

func (x *Node) GetTableRow() *ProtoTableRow {
	if x, ok := x.GetObject().(*Node_TableRow); ok {
		return x.TableRow
	}
	return nil
}

func (x *Node) GetTableCell() *ProtoTableCell {
	if x, ok := x.GetObject().(*Node_TableCell); ok {
		return x.TableCell
	}
	return nil
}

func (x *Node) GetCDef() *ProtoCDef {
	if x, ok := x.GetObject().(*Node_CDef); ok {
		return x.CDef
	}
	return nil
}

func (x *Node) GetPDef() *ProtoPDef {
	if x, ok := x.GetObject().(*Node_PDef); ok {
		return x.PDef
	}
	return nil
}

func (x *Node) GetApplyCDef() *ProtoApplyProtoCDef {
	if x, ok := x.GetObject().(*Node_ApplyCDef); ok {
		return x.ApplyCDef
	}
	return nil
}

func (x *Node) GetApplyPDef() *ProtoApplyProtoPDef {
	if x, ok := x.GetObject().(*Node_ApplyPDef); ok {
		return x.ApplyPDef
	}
	return nil
}

func (x *Node) GetApplyPtConfig() *ProtoApplyPtConfig {
	if x, ok := x.GetObject().(*Node_ApplyPtConfig); ok {
		return x.ApplyPtConfig
	}
	return nil
}

func (x *Node) GetApplyUlConfig() *ProtoApplyUlConfig {
	if x, ok := x.GetObject().(*Node_ApplyUlConfig); ok {
		return x.ApplyUlConfig
	}
	return nil
}

func (x *Node) GetPtConfig() *ProtoPtConfig {
	if x, ok := x.GetObject().(*Node_PtConfig); ok {
		return x.PtConfig
	}
	return nil
}

func (x *Node) GetUlConfig() *ProtoUlConfig {
	if x, ok := x.GetObject().(*Node_UlConfig); ok {
		return x.UlConfig
	}
	return nil
}

func (x *Node) GetNewPage() *ProtoNewPage {
	if x, ok := x.GetObject().(*Node_NewPage); ok {
		return x.NewPage
	}
	return nil
}

func (x *Node) GetVariable() *ProtoVariable {
	if x, ok := x.GetObject().(*Node_Variable); ok {
		return x.Variable
	}
	return nil
}

func (x *Node) GetNamedString() *ProtoNamedString {
	if x, ok := x.GetObject().(*Node_NamedString); ok {
		return x.NamedString
	}
	return nil
}

func (x *Node) GetParagraph() *ProtoParagraph {
	if x, ok := x.GetObject().(*Node_Paragraph); ok {
		return x.Paragraph
	}
	return nil
}

func (x *Node) GetSection() *ProtoSection {
	if x, ok := x.GetObject().(*Node_Section); ok {
		return x.Section
	}
	return nil
}

func (x *Node) GetSpan() *ProtoSpan {
	if x, ok := x.GetObject().(*Node_Span); ok {
		return x.Span
	}
	return nil
}

func (x *Node) GetLink() *ProtoLink {
	if x, ok := x.GetObject().(*Node_Link); ok {
		return x.Link
	}
	return nil
}

func (x *Node) GetDirectory() *ProtoDirectory {
	if x, ok := x.GetObject().(*Node_Directory); ok {
		return x.Directory
	}
	return nil
}

func (x *Node) GetTableContentGroup() *ProtoTableContentGroup {
	if x, ok := x.GetObject().(*Node_TableContentGroup); ok {
		return x.TableContentGroup
	}
	return nil
}

func (x *Node) GetTableConfig() *ProtoTableConfig {
	if x, ok := x.GetObject().(*Node_TableConfig); ok {
		return x.TableConfig
	}
	return nil
}

func (x *Node) GetTableCellConfig() *ProtoTableCellConfig {
	if x, ok := x.GetObject().(*Node_TableCellConfig); ok {
		return x.TableCellConfig
	}
	return nil
}

func (x *Node) GetTableRowConfig() *ProtoTableRowConfig {
	if x, ok := x.GetObject().(*Node_TableRowConfig); ok {
		return x.TableRowConfig
	}
	return nil
}

func (x *Node) GetTableContentGroupConfig() *ProtoTableContentGroupConfig {
	if x, ok := x.GetObject().(*Node_TableContentGroupConfig); ok {
		return x.TableContentGroupConfig
	}
	return nil
}

func (x *Node) GetBrickReference() *ProtoBrickReference {
	if x, ok := x.GetObject().(*Node_BrickReference); ok {
		return x.BrickReference
	}
	return nil
}

func (x *Node) GetIndentation() *ProtoIndentation {
	if x, ok := x.GetObject().(*Node_Indentation); ok {
		return x.Indentation
	}
	return nil
}

func (x *Node) GetBarcode() *ProtoBarcode {
	if x, ok := x.GetObject().(*Node_Barcode); ok {
		return x.Barcode
	}
	return nil
}

func (x *Node) GetWsArea() *ProtoWsArea {
	if x, ok := x.GetObject().(*Node_WsArea); ok {
		return x.WsArea
	}
	return nil
}

func (x *Node) GetCarryOver() *ProtoCarryOver {
	if x, ok := x.GetObject().(*Node_CarryOver); ok {
		return x.CarryOver
	}
	return nil
}

func (x *Node) GetSubTotal() *ProtoSubTotal {
	if x, ok := x.GetObject().(*Node_SubTotal); ok {
		return x.SubTotal
	}
	return nil
}

func (x *Node) GetLoop() *ProtoLoop {
	if x, ok := x.GetObject().(*Node_Loop); ok {
		return x.Loop
	}
	return nil
}

func (x *Node) GetLoopEntry() *ProtoLoopEntry {
	if x, ok := x.GetObject().(*Node_LoopEntry); ok {
		return x.LoopEntry
	}
	return nil
}

func (x *Node) GetRule() *ProtoRule {
	if x, ok := x.GetObject().(*Node_Rule); ok {
		return x.Rule
	}
	return nil
}

func (x *Node) GetLayout() *ProtoLayout {
	if x, ok := x.GetObject().(*Node_Layout); ok {
		return x.Layout
	}
	return nil
}

type isNode_Object interface {
	isNode_Object()
}

type Node_ListSetting struct {
	ListSetting *ProtoListSetting `protobuf:"bytes,2,opt,name=list_setting,json=listSetting,proto3,oneof"`
}

type Node_ColorDef struct {
	ColorDef *ProtoColorDef `protobuf:"bytes,3,opt,name=color_def,json=colorDef,proto3,oneof"`
}

type Node_Brick struct {
	Brick *ProtoBrick `protobuf:"bytes,4,opt,name=brick,proto3,oneof"`
}

type Node_Template struct {
	Template *ProtoTemplate `protobuf:"bytes,5,opt,name=template,proto3,oneof"`
}

type Node_Formatted struct {
	Formatted *ProtoFormatted `protobuf:"bytes,6,opt,name=formatted,proto3,oneof"`
}

type Node_Image struct {
	Image *ProtoImage `protobuf:"bytes,7,opt,name=image,proto3,oneof"`
}

type Node_ParagraphFormat struct {
	ParagraphFormat *ProtoParagraphFormat `protobuf:"bytes,8,opt,name=paragraph_format,json=paragraphFormat,proto3,oneof"`
}

type Node_TextBrick struct {
	TextBrick *ProtoTextBrick `protobuf:"bytes,9,opt,name=text_brick,json=textBrick,proto3,oneof"`
}

type Node_Text struct {
	Text *ProtoText `protobuf:"bytes,10,opt,name=text,proto3,oneof"`
}

type Node_Linebreak struct {
	Linebreak *ProtoLinebreak `protobuf:"bytes,11,opt,name=linebreak,proto3,oneof"`
}

type Node_SpaceVertically struct {
	SpaceVertically *ProtoSpaceVertically `protobuf:"bytes,12,opt,name=space_vertically,json=spaceVertically,proto3,oneof"`
}

type Node_Footer struct {
	Footer *ProtoFooter `protobuf:"bytes,13,opt,name=footer,proto3,oneof"`
}

type Node_Header struct {
	Header *ProtoHeader `protobuf:"bytes,14,opt,name=header,proto3,oneof"`
}

type Node_Table struct {
	Table *ProtoTable `protobuf:"bytes,15,opt,name=table,proto3,oneof"`
}

type Node_TableRow struct {
	TableRow *ProtoTableRow `protobuf:"bytes,16,opt,name=table_row,json=tableRow,proto3,oneof"`
}

type Node_TableCell struct {
	TableCell *ProtoTableCell `protobuf:"bytes,17,opt,name=table_cell,json=tableCell,proto3,oneof"`
}

type Node_CDef struct {
	CDef *ProtoCDef `protobuf:"bytes,18,opt,name=c_def,json=cDef,proto3,oneof"`
}

type Node_PDef struct {
	PDef *ProtoPDef `protobuf:"bytes,19,opt,name=p_def,json=pDef,proto3,oneof"`
}

type Node_ApplyCDef struct {
	ApplyCDef *ProtoApplyProtoCDef `protobuf:"bytes,20,opt,name=apply_c_def,json=applyCDef,proto3,oneof"`
}

type Node_ApplyPDef struct {
	ApplyPDef *ProtoApplyProtoPDef `protobuf:"bytes,21,opt,name=apply_p_def,json=applyPDef,proto3,oneof"`
}

type Node_ApplyPtConfig struct {
	ApplyPtConfig *ProtoApplyPtConfig `protobuf:"bytes,22,opt,name=apply_pt_config,json=applyPtConfig,proto3,oneof"`
}

type Node_ApplyUlConfig struct {
	ApplyUlConfig *ProtoApplyUlConfig `protobuf:"bytes,23,opt,name=apply_ul_config,json=applyUlConfig,proto3,oneof"`
}

type Node_PtConfig struct {
	PtConfig *ProtoPtConfig `protobuf:"bytes,24,opt,name=pt_config,json=ptConfig,proto3,oneof"`
}

type Node_UlConfig struct {
	UlConfig *ProtoUlConfig `protobuf:"bytes,25,opt,name=ul_config,json=ulConfig,proto3,oneof"`
}

type Node_NewPage struct {
	NewPage *ProtoNewPage `protobuf:"bytes,26,opt,name=new_page,json=newPage,proto3,oneof"`
}

type Node_Variable struct {
	Variable *ProtoVariable `protobuf:"bytes,27,opt,name=variable,proto3,oneof"`
}

type Node_NamedString struct {
	NamedString *ProtoNamedString `protobuf:"bytes,28,opt,name=named_string,json=namedString,proto3,oneof"`
}

type Node_Paragraph struct {
	Paragraph *ProtoParagraph `protobuf:"bytes,30,opt,name=paragraph,proto3,oneof"`
}

type Node_Section struct {
	Section *ProtoSection `protobuf:"bytes,31,opt,name=section,proto3,oneof"`
}

type Node_Span struct {
	Span *ProtoSpan `protobuf:"bytes,32,opt,name=span,proto3,oneof"`
}

type Node_Link struct {
	Link *ProtoLink `protobuf:"bytes,33,opt,name=link,proto3,oneof"`
}

type Node_Directory struct {
	Directory *ProtoDirectory `protobuf:"bytes,34,opt,name=directory,proto3,oneof"`
}

type Node_TableContentGroup struct {
	TableContentGroup *ProtoTableContentGroup `protobuf:"bytes,35,opt,name=table_content_group,json=tableContentGroup,proto3,oneof"`
}

type Node_TableConfig struct {
	TableConfig *ProtoTableConfig `protobuf:"bytes,36,opt,name=table_config,json=tableConfig,proto3,oneof"`
}

type Node_TableCellConfig struct {
	TableCellConfig *ProtoTableCellConfig `protobuf:"bytes,37,opt,name=table_cell_config,json=tableCellConfig,proto3,oneof"`
}

type Node_TableRowConfig struct {
	TableRowConfig *ProtoTableRowConfig `protobuf:"bytes,38,opt,name=table_row_config,json=tableRowConfig,proto3,oneof"`
}

type Node_TableContentGroupConfig struct {
	TableContentGroupConfig *ProtoTableContentGroupConfig `protobuf:"bytes,39,opt,name=table_content_group_config,json=tableContentGroupConfig,proto3,oneof"`
}

type Node_BrickReference struct {
	BrickReference *ProtoBrickReference `protobuf:"bytes,40,opt,name=brick_reference,json=brickReference,proto3,oneof"`
}

type Node_Indentation struct {
	Indentation *ProtoIndentation `protobuf:"bytes,55,opt,name=indentation,proto3,oneof"`
}

type Node_Barcode struct {
	Barcode *ProtoBarcode `protobuf:"bytes,56,opt,name=barcode,proto3,oneof"`
}

type Node_WsArea struct {
	WsArea *ProtoWsArea `protobuf:"bytes,57,opt,name=ws_area,json=wsArea,proto3,oneof"`
}

type Node_CarryOver struct {
	CarryOver *ProtoCarryOver `protobuf:"bytes,58,opt,name=carry_over,json=carryOver,proto3,oneof"`
}

type Node_SubTotal struct {
	SubTotal *ProtoSubTotal `protobuf:"bytes,59,opt,name=sub_total,json=subTotal,proto3,oneof"`
}

type Node_Loop struct {
	Loop *ProtoLoop `protobuf:"bytes,60,opt,name=loop,proto3,oneof"`
}

type Node_LoopEntry struct {
	LoopEntry *ProtoLoopEntry `protobuf:"bytes,61,opt,name=loop_entry,json=loopEntry,proto3,oneof"`
}

type Node_Rule struct {
	Rule *ProtoRule `protobuf:"bytes,62,opt,name=rule,proto3,oneof"`
}

type Node_Layout struct {
	Layout *ProtoLayout `protobuf:"bytes,63,opt,name=layout,proto3,oneof"`
}

func (*Node_ListSetting) isNode_Object() {}

func (*Node_ColorDef) isNode_Object() {}

func (*Node_Brick) isNode_Object() {}

func (*Node_Template) isNode_Object() {}

func (*Node_Formatted) isNode_Object() {}

func (*Node_Image) isNode_Object() {}

func (*Node_ParagraphFormat) isNode_Object() {}

func (*Node_TextBrick) isNode_Object() {}

func (*Node_Text) isNode_Object() {}

func (*Node_Linebreak) isNode_Object() {}

func (*Node_SpaceVertically) isNode_Object() {}

func (*Node_Footer) isNode_Object() {}

func (*Node_Header) isNode_Object() {}

func (*Node_Table) isNode_Object() {}

func (*Node_TableRow) isNode_Object() {}

func (*Node_TableCell) isNode_Object() {}

func (*Node_CDef) isNode_Object() {}

func (*Node_PDef) isNode_Object() {}

func (*Node_ApplyCDef) isNode_Object() {}

func (*Node_ApplyPDef) isNode_Object() {}

func (*Node_ApplyPtConfig) isNode_Object() {}

func (*Node_ApplyUlConfig) isNode_Object() {}

func (*Node_PtConfig) isNode_Object() {}

func (*Node_UlConfig) isNode_Object() {}

func (*Node_NewPage) isNode_Object() {}

func (*Node_Variable) isNode_Object() {}

func (*Node_NamedString) isNode_Object() {}

func (*Node_Paragraph) isNode_Object() {}

func (*Node_Section) isNode_Object() {}

func (*Node_Span) isNode_Object() {}

func (*Node_Link) isNode_Object() {}

func (*Node_Directory) isNode_Object() {}

func (*Node_TableContentGroup) isNode_Object() {}

func (*Node_TableConfig) isNode_Object() {}

func (*Node_TableCellConfig) isNode_Object() {}

func (*Node_TableRowConfig) isNode_Object() {}

func (*Node_TableContentGroupConfig) isNode_Object() {}

func (*Node_BrickReference) isNode_Object() {}

func (*Node_Indentation) isNode_Object() {}

func (*Node_Barcode) isNode_Object() {}

func (*Node_WsArea) isNode_Object() {}

func (*Node_CarryOver) isNode_Object() {}

func (*Node_SubTotal) isNode_Object() {}

func (*Node_Loop) isNode_Object() {}

func (*Node_LoopEntry) isNode_Object() {}

func (*Node_Rule) isNode_Object() {}

func (*Node_Layout) isNode_Object() {}

type ProtoTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings        *ProtoTableSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	ConfigName      string              `protobuf:"bytes,2,opt,name=config_name,json=configName,proto3" json:"config_name,omitempty"`
	CarryOver       *Node               `protobuf:"bytes,3,opt,name=carry_over,json=carryOver,proto3" json:"carry_over,omitempty"`
	SubTotal        *Node               `protobuf:"bytes,4,opt,name=sub_total,json=subTotal,proto3" json:"sub_total,omitempty"`
	ComChannelUuids []string            `protobuf:"bytes,5,rep,name=com_channel_uuids,json=comChannelUuids,proto3" json:"com_channel_uuids,omitempty"`
}

func (x *ProtoTable) Reset() {
	*x = ProtoTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_document_elements_v1_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoTable) ProtoMessage() {}

func (x *ProtoTable) ProtoReflect() protoreflect.Message {
	mi := &file_document_elements_v1_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoTable.ProtoReflect.Descriptor instead.
func (*ProtoTable) Descriptor() ([]byte, []int) {
	return file_document_elements_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoTable) GetSettings() *ProtoTableSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *ProtoTable) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *ProtoTable) GetCarryOver() *Node {
	if x != nil {
		return x.CarryOver
	}
	return nil
}

func (x *ProtoTable) GetSubTotal() *Node {
	if x != nil {
		return x.SubTotal
	}
	return nil
}

func (x *ProtoTable) GetComChannelUuids() []string {
	if x != nil {
		return x.ComChannelUuids
	}
	return nil
}

var File_document_elements_v1_node_proto protoreflect.FileDescriptor

var file_document_elements_v1_node_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x25, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x5f, 0x63, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x64, 0x65, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x5f, 0x75, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x25, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x6f, 0x76, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x64, 0x65,
	0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x26, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x64, 0x65, 0x66,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x23, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x73, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbe, 0x1a, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x42, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x44, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x72, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x12, 0x41,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x44, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x09, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x61, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x42,
	0x72, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x42, 0x72, 0x69, 0x63,
	0x6b, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x65, 0x78, 0x74,
	0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x44, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65,
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x62, 0x72, 0x65, 0x61,
	0x6b, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x57,
	0x0a, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x6c, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x08, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12,
	0x45, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x36, 0x0a, 0x05, 0x63, 0x5f, 0x64, 0x65, 0x66, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x43, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x04, 0x63, 0x44, 0x65, 0x66, 0x12, 0x36,
	0x0a, 0x05, 0x70, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x44, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x44, 0x65, 0x66, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x63, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x43, 0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x43,
	0x44, 0x65, 0x66, 0x12, 0x4b, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x5f, 0x64,
	0x65, 0x66, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x44, 0x65, 0x66, 0x48, 0x00, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x44, 0x65, 0x66,
	0x12, 0x52, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x70, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79,
	0x55, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x09, 0x70, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x00, 0x52, 0x08, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a, 0x09,
	0x75, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x55, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x75, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3f, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x41, 0x0a, 0x08, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x44, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61,
	0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x53, 0x70, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x73, 0x70, 0x61, 0x6e, 0x12, 0x35,
	0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x5e, 0x0a, 0x13, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x11, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4b, 0x0a, 0x0c, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x58, 0x0a, 0x11, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x25, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x00, 0x52, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x55, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x6f,
	0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x6f, 0x77, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x71, 0x0a, 0x1a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x17, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x54, 0x0a, 0x0f,
	0x62, 0x72, 0x69, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x42, 0x72, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x62, 0x72, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x3c,
	0x0a, 0x07, 0x77, 0x73, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x73, 0x41, 0x72,
	0x65, 0x61, 0x48, 0x00, 0x52, 0x06, 0x77, 0x73, 0x41, 0x72, 0x65, 0x61, 0x12, 0x45, 0x0a, 0x0a,
	0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72,
	0x72, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x79, 0x4f,
	0x76, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x53, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x73,
	0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4c, 0x6f, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x04, 0x6c, 0x6f, 0x6f, 0x70, 0x12, 0x45,
	0x0a, 0x0a, 0x6c, 0x6f, 0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x3d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c,
	0x6f, 0x6f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x6f, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x3e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x93, 0x02, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x61, 0x72,
	0x72, 0x79, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x09, 0x63, 0x61, 0x72, 0x72, 0x79,
	0x4f, 0x76, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a,
	0x11, 0x63, 0x6f, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x55, 0x75, 0x69, 0x64, 0x73, 0x2a, 0x8b, 0x0f, 0x0a, 0x13, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52, 0x41, 0x4e, 0x43,
	0x48, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52,
	0x49, 0x43, 0x4b, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x10, 0x02,
	0x12, 0x2a, 0x0a, 0x26, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x10,
	0x04, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f,
	0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x12, 0x2a, 0x0a, 0x26, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x46, 0x4f, 0x52,
	0x4d, 0x41, 0x54, 0x10, 0x07, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x41, 0x52, 0x41, 0x47, 0x52, 0x41, 0x50, 0x48, 0x10, 0x08, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x1e, 0x0a,
	0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x41, 0x4e, 0x10, 0x0a, 0x12, 0x1f, 0x0a,
	0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0b, 0x12, 0x24,
	0x0a, 0x20, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x45,
	0x4c, 0x4c, 0x10, 0x0c, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x57, 0x10, 0x0d, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4c, 0x41, 0x54, 0x45, 0x10, 0x0f, 0x12, 0x1e, 0x0a,
	0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x10, 0x12, 0x23, 0x0a,
	0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x44, 0x45, 0x46,
	0x10, 0x13, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d, 0x41, 0x47,
	0x45, 0x10, 0x1e, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x44, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x22, 0x12, 0x2d, 0x0a, 0x29, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10, 0x23, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47,
	0x10, 0x24, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45,
	0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x43, 0x45, 0x4c, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x25, 0x12,
	0x2a, 0x0a, 0x26, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x52,
	0x4f, 0x57, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x26, 0x12, 0x34, 0x0a, 0x30, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45,
	0x4e, 0x54, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x27, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x10,
	0x28, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x52, 0x45, 0x43,
	0x54, 0x4f, 0x52, 0x59, 0x10, 0x29, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x54, 0x45, 0x58, 0x54, 0x5f, 0x42, 0x52, 0x49, 0x43, 0x4b, 0x10, 0x2a, 0x12, 0x22, 0x0a, 0x1e,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x52, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x2c,
	0x12, 0x2a, 0x0a, 0x26, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f,
	0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x2d, 0x12, 0x23, 0x0a, 0x1f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x54, 0x45, 0x44, 0x10,
	0x2e, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59,
	0x5f, 0x43, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x2f, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x50, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x30, 0x12,
	0x29, 0x0a, 0x25, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x50,
	0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x31, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x55, 0x4c, 0x5f, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x47, 0x10, 0x32, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x5f, 0x44, 0x45, 0x46, 0x10, 0x33, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x5f, 0x44, 0x45, 0x46, 0x10, 0x34, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x35, 0x12, 0x23, 0x0a, 0x1f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4c, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10,
	0x36, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x50,
	0x41, 0x47, 0x45, 0x10, 0x37, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48,
	0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x38, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x4f, 0x4f, 0x54, 0x45, 0x52, 0x10, 0x39, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x3c,
	0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x52, 0x43, 0x4f, 0x44,
	0x45, 0x10, 0x3d, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x53, 0x5f,
	0x41, 0x52, 0x45, 0x41, 0x10, 0x3e, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x41, 0x52, 0x52, 0x59, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x3f, 0x12, 0x23, 0x0a, 0x1f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x10,
	0x40, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x10,
	0x41, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c,
	0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f,
	0x45, 0x4e, 0x54, 0x52, 0x59, 0x10, 0x42, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x55, 0x4c, 0x45, 0x10, 0x43, 0x12, 0x2c, 0x0a, 0x28, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x44, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c,
	0x41, 0x59, 0x4f, 0x55, 0x54, 0x10, 0x45, 0x42, 0xe5, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2f, 0x64, 0x6f, 0x63, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x13, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x13, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_document_elements_v1_node_proto_rawDescOnce sync.Once
	file_document_elements_v1_node_proto_rawDescData = file_document_elements_v1_node_proto_rawDesc
)

func file_document_elements_v1_node_proto_rawDescGZIP() []byte {
	file_document_elements_v1_node_proto_rawDescOnce.Do(func() {
		file_document_elements_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_document_elements_v1_node_proto_rawDescData)
	})
	return file_document_elements_v1_node_proto_rawDescData
}

var file_document_elements_v1_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_document_elements_v1_node_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_document_elements_v1_node_proto_goTypes = []interface{}{
	(DocumentElementType)(0),             // 0: document_elements.v1.DocumentElementType
	(*Node)(nil),                         // 1: document_elements.v1.Node
	(*ProtoTable)(nil),                   // 2: document_elements.v1.ProtoTable
	(*ProtoListSetting)(nil),             // 3: document_elements.v1.ProtoListSetting
	(*ProtoColorDef)(nil),                // 4: document_elements.v1.ProtoColorDef
	(*ProtoBrick)(nil),                   // 5: document_elements.v1.ProtoBrick
	(*ProtoTemplate)(nil),                // 6: document_elements.v1.ProtoTemplate
	(*ProtoFormatted)(nil),               // 7: document_elements.v1.ProtoFormatted
	(*ProtoImage)(nil),                   // 8: document_elements.v1.ProtoImage
	(*ProtoParagraphFormat)(nil),         // 9: document_elements.v1.ProtoParagraphFormat
	(*ProtoTextBrick)(nil),               // 10: document_elements.v1.ProtoTextBrick
	(*ProtoText)(nil),                    // 11: document_elements.v1.ProtoText
	(*ProtoLinebreak)(nil),               // 12: document_elements.v1.ProtoLinebreak
	(*ProtoSpaceVertically)(nil),         // 13: document_elements.v1.ProtoSpaceVertically
	(*ProtoFooter)(nil),                  // 14: document_elements.v1.ProtoFooter
	(*ProtoHeader)(nil),                  // 15: document_elements.v1.ProtoHeader
	(*ProtoTableRow)(nil),                // 16: document_elements.v1.ProtoTableRow
	(*ProtoTableCell)(nil),               // 17: document_elements.v1.ProtoTableCell
	(*ProtoCDef)(nil),                    // 18: document_elements.v1.ProtoCDef
	(*ProtoPDef)(nil),                    // 19: document_elements.v1.ProtoPDef
	(*ProtoApplyProtoCDef)(nil),          // 20: document_elements.v1.ProtoApplyProtoCDef
	(*ProtoApplyProtoPDef)(nil),          // 21: document_elements.v1.ProtoApplyProtoPDef
	(*ProtoApplyPtConfig)(nil),           // 22: document_elements.v1.ProtoApplyPtConfig
	(*ProtoApplyUlConfig)(nil),           // 23: document_elements.v1.ProtoApplyUlConfig
	(*ProtoPtConfig)(nil),                // 24: document_elements.v1.ProtoPtConfig
	(*ProtoUlConfig)(nil),                // 25: document_elements.v1.ProtoUlConfig
	(*ProtoNewPage)(nil),                 // 26: document_elements.v1.ProtoNewPage
	(*ProtoVariable)(nil),                // 27: document_elements.v1.ProtoVariable
	(*ProtoNamedString)(nil),             // 28: document_elements.v1.ProtoNamedString
	(*ProtoParagraph)(nil),               // 29: document_elements.v1.ProtoParagraph
	(*ProtoSection)(nil),                 // 30: document_elements.v1.ProtoSection
	(*ProtoSpan)(nil),                    // 31: document_elements.v1.ProtoSpan
	(*ProtoLink)(nil),                    // 32: document_elements.v1.ProtoLink
	(*ProtoDirectory)(nil),               // 33: document_elements.v1.ProtoDirectory
	(*ProtoTableContentGroup)(nil),       // 34: document_elements.v1.ProtoTableContentGroup
	(*ProtoTableConfig)(nil),             // 35: document_elements.v1.ProtoTableConfig
	(*ProtoTableCellConfig)(nil),         // 36: document_elements.v1.ProtoTableCellConfig
	(*ProtoTableRowConfig)(nil),          // 37: document_elements.v1.ProtoTableRowConfig
	(*ProtoTableContentGroupConfig)(nil), // 38: document_elements.v1.ProtoTableContentGroupConfig
	(*ProtoBrickReference)(nil),          // 39: document_elements.v1.ProtoBrickReference
	(*ProtoIndentation)(nil),             // 40: document_elements.v1.ProtoIndentation
	(*ProtoBarcode)(nil),                 // 41: document_elements.v1.ProtoBarcode
	(*ProtoWsArea)(nil),                  // 42: document_elements.v1.ProtoWsArea
	(*ProtoCarryOver)(nil),               // 43: document_elements.v1.ProtoCarryOver
	(*ProtoSubTotal)(nil),                // 44: document_elements.v1.ProtoSubTotal
	(*ProtoLoop)(nil),                    // 45: document_elements.v1.ProtoLoop
	(*ProtoLoopEntry)(nil),               // 46: document_elements.v1.ProtoLoopEntry
	(*ProtoRule)(nil),                    // 47: document_elements.v1.ProtoRule
	(*ProtoLayout)(nil),                  // 48: document_elements.v1.ProtoLayout
	(*ProtoTableSettings)(nil),           // 49: document_elements.v1.ProtoTableSettings
}
var file_document_elements_v1_node_proto_depIdxs = []int32{
	1,  // 0: document_elements.v1.Node.children:type_name -> document_elements.v1.Node
	3,  // 1: document_elements.v1.Node.list_setting:type_name -> document_elements.v1.ProtoListSetting
	4,  // 2: document_elements.v1.Node.color_def:type_name -> document_elements.v1.ProtoColorDef
	5,  // 3: document_elements.v1.Node.brick:type_name -> document_elements.v1.ProtoBrick
	6,  // 4: document_elements.v1.Node.template:type_name -> document_elements.v1.ProtoTemplate
	7,  // 5: document_elements.v1.Node.formatted:type_name -> document_elements.v1.ProtoFormatted
	8,  // 6: document_elements.v1.Node.image:type_name -> document_elements.v1.ProtoImage
	9,  // 7: document_elements.v1.Node.paragraph_format:type_name -> document_elements.v1.ProtoParagraphFormat
	10, // 8: document_elements.v1.Node.text_brick:type_name -> document_elements.v1.ProtoTextBrick
	11, // 9: document_elements.v1.Node.text:type_name -> document_elements.v1.ProtoText
	12, // 10: document_elements.v1.Node.linebreak:type_name -> document_elements.v1.ProtoLinebreak
	13, // 11: document_elements.v1.Node.space_vertically:type_name -> document_elements.v1.ProtoSpaceVertically
	14, // 12: document_elements.v1.Node.footer:type_name -> document_elements.v1.ProtoFooter
	15, // 13: document_elements.v1.Node.header:type_name -> document_elements.v1.ProtoHeader
	2,  // 14: document_elements.v1.Node.table:type_name -> document_elements.v1.ProtoTable
	16, // 15: document_elements.v1.Node.table_row:type_name -> document_elements.v1.ProtoTableRow
	17, // 16: document_elements.v1.Node.table_cell:type_name -> document_elements.v1.ProtoTableCell
	18, // 17: document_elements.v1.Node.c_def:type_name -> document_elements.v1.ProtoCDef
	19, // 18: document_elements.v1.Node.p_def:type_name -> document_elements.v1.ProtoPDef
	20, // 19: document_elements.v1.Node.apply_c_def:type_name -> document_elements.v1.ProtoApplyProtoCDef
	21, // 20: document_elements.v1.Node.apply_p_def:type_name -> document_elements.v1.ProtoApplyProtoPDef
	22, // 21: document_elements.v1.Node.apply_pt_config:type_name -> document_elements.v1.ProtoApplyPtConfig
	23, // 22: document_elements.v1.Node.apply_ul_config:type_name -> document_elements.v1.ProtoApplyUlConfig
	24, // 23: document_elements.v1.Node.pt_config:type_name -> document_elements.v1.ProtoPtConfig
	25, // 24: document_elements.v1.Node.ul_config:type_name -> document_elements.v1.ProtoUlConfig
	26, // 25: document_elements.v1.Node.new_page:type_name -> document_elements.v1.ProtoNewPage
	27, // 26: document_elements.v1.Node.variable:type_name -> document_elements.v1.ProtoVariable
	28, // 27: document_elements.v1.Node.named_string:type_name -> document_elements.v1.ProtoNamedString
	29, // 28: document_elements.v1.Node.paragraph:type_name -> document_elements.v1.ProtoParagraph
	30, // 29: document_elements.v1.Node.section:type_name -> document_elements.v1.ProtoSection
	31, // 30: document_elements.v1.Node.span:type_name -> document_elements.v1.ProtoSpan
	32, // 31: document_elements.v1.Node.link:type_name -> document_elements.v1.ProtoLink
	33, // 32: document_elements.v1.Node.directory:type_name -> document_elements.v1.ProtoDirectory
	34, // 33: document_elements.v1.Node.table_content_group:type_name -> document_elements.v1.ProtoTableContentGroup
	35, // 34: document_elements.v1.Node.table_config:type_name -> document_elements.v1.ProtoTableConfig
	36, // 35: document_elements.v1.Node.table_cell_config:type_name -> document_elements.v1.ProtoTableCellConfig
	37, // 36: document_elements.v1.Node.table_row_config:type_name -> document_elements.v1.ProtoTableRowConfig
	38, // 37: document_elements.v1.Node.table_content_group_config:type_name -> document_elements.v1.ProtoTableContentGroupConfig
	39, // 38: document_elements.v1.Node.brick_reference:type_name -> document_elements.v1.ProtoBrickReference
	40, // 39: document_elements.v1.Node.indentation:type_name -> document_elements.v1.ProtoIndentation
	41, // 40: document_elements.v1.Node.barcode:type_name -> document_elements.v1.ProtoBarcode
	42, // 41: document_elements.v1.Node.ws_area:type_name -> document_elements.v1.ProtoWsArea
	43, // 42: document_elements.v1.Node.carry_over:type_name -> document_elements.v1.ProtoCarryOver
	44, // 43: document_elements.v1.Node.sub_total:type_name -> document_elements.v1.ProtoSubTotal
	45, // 44: document_elements.v1.Node.loop:type_name -> document_elements.v1.ProtoLoop
	46, // 45: document_elements.v1.Node.loop_entry:type_name -> document_elements.v1.ProtoLoopEntry
	47, // 46: document_elements.v1.Node.rule:type_name -> document_elements.v1.ProtoRule
	48, // 47: document_elements.v1.Node.layout:type_name -> document_elements.v1.ProtoLayout
	49, // 48: document_elements.v1.ProtoTable.settings:type_name -> document_elements.v1.ProtoTableSettings
	1,  // 49: document_elements.v1.ProtoTable.carry_over:type_name -> document_elements.v1.Node
	1,  // 50: document_elements.v1.ProtoTable.sub_total:type_name -> document_elements.v1.Node
	51, // [51:51] is the sub-list for method output_type
	51, // [51:51] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_document_elements_v1_node_proto_init() }
func file_document_elements_v1_node_proto_init() {
	if File_document_elements_v1_node_proto != nil {
		return
	}
	file_document_elements_v1_apply_cdef_proto_init()
	file_document_elements_v1_apply_pdef_proto_init()
	file_document_elements_v1_apply_ul_config_proto_init()
	file_document_elements_v1_apply_pt_config_proto_init()
	file_document_elements_v1_barcode_proto_init()
	file_document_elements_v1_brick_proto_init()
	file_document_elements_v1_brick_reference_proto_init()
	file_document_elements_v1_carry_over_proto_init()
	file_document_elements_v1_cdef_proto_init()
	file_document_elements_v1_color_def_proto_init()
	file_document_elements_v1_directory_proto_init()
	file_document_elements_v1_footer_proto_init()
	file_document_elements_v1_formatted_proto_init()
	file_document_elements_v1_header_proto_init()
	file_document_elements_v1_image_proto_init()
	file_document_elements_v1_indentation_proto_init()
	file_document_elements_v1_layout_proto_init()
	file_document_elements_v1_linebreak_proto_init()
	file_document_elements_v1_link_proto_init()
	file_document_elements_v1_list_setting_proto_init()
	file_document_elements_v1_loop_proto_init()
	file_document_elements_v1_loop_entry_proto_init()
	file_document_elements_v1_named_string_proto_init()
	file_document_elements_v1_new_page_proto_init()
	file_document_elements_v1_paragraph_proto_init()
	file_document_elements_v1_paragraph_format_proto_init()
	file_document_elements_v1_pdef_proto_init()
	file_document_elements_v1_pt_config_proto_init()
	file_document_elements_v1_rule_proto_init()
	file_document_elements_v1_section_proto_init()
	file_document_elements_v1_space_vertically_proto_init()
	file_document_elements_v1_span_proto_init()
	file_document_elements_v1_sub_total_proto_init()
	file_document_elements_v1_table_proto_init()
	file_document_elements_v1_template_proto_init()
	file_document_elements_v1_text_proto_init()
	file_document_elements_v1_textbrick_proto_init()
	file_document_elements_v1_ul_config_proto_init()
	file_document_elements_v1_variable_proto_init()
	file_document_elements_v1_ws_area_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_document_elements_v1_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_document_elements_v1_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_document_elements_v1_node_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Node_ListSetting)(nil),
		(*Node_ColorDef)(nil),
		(*Node_Brick)(nil),
		(*Node_Template)(nil),
		(*Node_Formatted)(nil),
		(*Node_Image)(nil),
		(*Node_ParagraphFormat)(nil),
		(*Node_TextBrick)(nil),
		(*Node_Text)(nil),
		(*Node_Linebreak)(nil),
		(*Node_SpaceVertically)(nil),
		(*Node_Footer)(nil),
		(*Node_Header)(nil),
		(*Node_Table)(nil),
		(*Node_TableRow)(nil),
		(*Node_TableCell)(nil),
		(*Node_CDef)(nil),
		(*Node_PDef)(nil),
		(*Node_ApplyCDef)(nil),
		(*Node_ApplyPDef)(nil),
		(*Node_ApplyPtConfig)(nil),
		(*Node_ApplyUlConfig)(nil),
		(*Node_PtConfig)(nil),
		(*Node_UlConfig)(nil),
		(*Node_NewPage)(nil),
		(*Node_Variable)(nil),
		(*Node_NamedString)(nil),
		(*Node_Paragraph)(nil),
		(*Node_Section)(nil),
		(*Node_Span)(nil),
		(*Node_Link)(nil),
		(*Node_Directory)(nil),
		(*Node_TableContentGroup)(nil),
		(*Node_TableConfig)(nil),
		(*Node_TableCellConfig)(nil),
		(*Node_TableRowConfig)(nil),
		(*Node_TableContentGroupConfig)(nil),
		(*Node_BrickReference)(nil),
		(*Node_Indentation)(nil),
		(*Node_Barcode)(nil),
		(*Node_WsArea)(nil),
		(*Node_CarryOver)(nil),
		(*Node_SubTotal)(nil),
		(*Node_Loop)(nil),
		(*Node_LoopEntry)(nil),
		(*Node_Rule)(nil),
		(*Node_Layout)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_document_elements_v1_node_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_document_elements_v1_node_proto_goTypes,
		DependencyIndexes: file_document_elements_v1_node_proto_depIdxs,
		EnumInfos:         file_document_elements_v1_node_proto_enumTypes,
		MessageInfos:      file_document_elements_v1_node_proto_msgTypes,
	}.Build()
	File_document_elements_v1_node_proto = out.File
	file_document_elements_v1_node_proto_rawDesc = nil
	file_document_elements_v1_node_proto_goTypes = nil
	file_document_elements_v1_node_proto_depIdxs = nil
}
