// @generated by protoc-gen-es v2.2.5
// @generated from file document_elements/v1/rule.proto (package document_elements.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ProtoMeasure } from "../../utils/v1/measure_pb";
import type { ProtoColor } from "../../utils/v1/color_pb";
import type { ProtoRuleStyle } from "../../utils/v1/rule_style_pb";

/**
 * Describes the file document_elements/v1/rule.proto.
 */
export declare const file_document_elements_v1_rule: GenFile;

/**
 * @generated from message document_elements.v1.ProtoRule
 */
export declare type ProtoRule = Message<"document_elements.v1.ProtoRule"> & {
  /**
   * @generated from field: utils.v1.ProtoMeasure x_offset = 1;
   */
  xOffset?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure y_offset = 2;
   */
  yOffset?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure width = 3;
   */
  width?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure thickness = 4;
   */
  thickness?: ProtoMeasure;

  /**
   * Rotation of the rule is stored in degrees clockwise
   * Examples:
   *      0째 = a horizontal rule to the right
   *      90째 = a vertical rule downwards
   *      180째 = a horizontal rule to the left
   *      270째 = a vertical rule upwards
   *
   * @generated from field: double rotation = 5;
   */
  rotation: number;

  /**
   * @generated from field: utils.v1.ProtoColor color = 6;
   */
  color?: ProtoColor;

  /**
   * @generated from field: utils.v1.ProtoRuleStyle style = 7;
   */
  style: ProtoRuleStyle;

  /**
   * Toggles whether the rule is a normal rule or a boundary rule
   *
   * @generated from field: document_elements.v1.ProtoRuleMode mode = 8;
   */
  mode: ProtoRuleMode;

  /**
   * If the rule is a boundary rule, this field contains the boundaries where the rule starts and ends.
   * Both boundaries can be independently set to be either an absolute value e.g. PT or a relative value e.g. %.
   * If the rule is a normal rule, this field is ignored.
   *
   * @generated from field: document_elements.v1.ProtoRuleBoundaries boundaries = 9;
   */
  boundaries?: ProtoRuleBoundaries;

  /**
   * @generated from field: repeated string com_channel_uuids = 10;
   */
  comChannelUuids: string[];
};

/**
 * Describes the message document_elements.v1.ProtoRule.
 * Use `create(ProtoRuleSchema)` to create a new message.
 */
export declare const ProtoRuleSchema: GenMessage<ProtoRule>;

/**
 * go-gen:ignore
 *
 * @generated from message document_elements.v1.ProtoRuleBoundaries
 */
export declare type ProtoRuleBoundaries = Message<"document_elements.v1.ProtoRuleBoundaries"> & {
  /**
   * @generated from field: utils.v1.ProtoMeasure start = 1;
   */
  start?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure end = 2;
   */
  end?: ProtoMeasure;
};

/**
 * Describes the message document_elements.v1.ProtoRuleBoundaries.
 * Use `create(ProtoRuleBoundariesSchema)` to create a new message.
 */
export declare const ProtoRuleBoundariesSchema: GenMessage<ProtoRuleBoundaries>;

/**
 * @generated from enum document_elements.v1.ProtoRuleMode
 */
export enum ProtoRuleMode {
  /**
   * @generated from enum value: PROTO_RULE_MODE_NORMAL = 0;
   */
  NORMAL = 0,

  /**
   * @generated from enum value: PROTO_RULE_MODE_BOUNDARY = 1;
   */
  BOUNDARY = 1,
}

/**
 * Describes the enum document_elements.v1.ProtoRuleMode.
 */
export declare const ProtoRuleModeSchema: GenEnum<ProtoRuleMode>;

