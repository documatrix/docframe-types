// @generated by protoc-gen-es v1.9.0
// @generated from file document_elements/v1/rule.proto (package document_elements.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ProtoMeasure } from "../../utils/v1/measure_pb.js";
import type { ProtoColor } from "../../utils/v1/color_pb.js";
import type { ProtoRuleStyle } from "../../utils/v1/rule_style_pb.js";

/**
 * @generated from enum document_elements.v1.ProtoRuleMode
 */
export declare enum ProtoRuleMode {
  /**
   * @generated from enum value: PROTO_RULE_MODE_NORMAL = 0;
   */
  NORMAL = 0,

  /**
   * @generated from enum value: PROTO_RULE_MODE_BOUNDARY = 1;
   */
  BOUNDARY = 1,
}

/**
 * @generated from message document_elements.v1.ProtoRule
 */
export declare class ProtoRule extends Message<ProtoRule> {
  /**
   * @generated from field: utils.v1.ProtoMeasure x_offset = 1;
   */
  xOffset?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure y_offset = 2;
   */
  yOffset?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure width = 3;
   */
  width?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure thickness = 4;
   */
  thickness?: ProtoMeasure;

  /**
   * Rotation of the rule is stored in degrees clockwise
   * Examples:
   *      0째 = a horizontal rule to the right
   *      90째 = a vertical rule downwards
   *      180째 = a horizontal rule to the left
   *      270째 = a vertical rule upwards
   *
   * @generated from field: double rotation = 5;
   */
  rotation: number;

  /**
   * @generated from field: utils.v1.ProtoColor color = 6;
   */
  color?: ProtoColor;

  /**
   * @generated from field: utils.v1.ProtoRuleStyle style = 7;
   */
  style: ProtoRuleStyle;

  /**
   * Toggles whether the rule is a normal rule or a boundary rule
   *
   * @generated from field: document_elements.v1.ProtoRuleMode mode = 8;
   */
  mode: ProtoRuleMode;

  /**
   * If the rule is a boundary rule, this field contains the boundaries where the rule starts and ends.
   * Both boundaries can be independently set to be either an absolute value e.g. PT or a relative value e.g. %.
   * If the rule is a normal rule, this field is ignored.
   *
   * @generated from field: document_elements.v1.ProtoRuleBoundaries boundaries = 9;
   */
  boundaries?: ProtoRuleBoundaries;

  constructor(data?: PartialMessage<ProtoRule>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "document_elements.v1.ProtoRule";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoRule;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoRule;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoRule;

  static equals(a: ProtoRule | PlainMessage<ProtoRule> | undefined, b: ProtoRule | PlainMessage<ProtoRule> | undefined): boolean;
}

/**
 * go-gen:ignore
 *
 * @generated from message document_elements.v1.ProtoRuleBoundaries
 */
export declare class ProtoRuleBoundaries extends Message<ProtoRuleBoundaries> {
  /**
   * @generated from field: utils.v1.ProtoMeasure start = 1;
   */
  start?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure end = 2;
   */
  end?: ProtoMeasure;

  constructor(data?: PartialMessage<ProtoRuleBoundaries>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "document_elements.v1.ProtoRuleBoundaries";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoRuleBoundaries;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoRuleBoundaries;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoRuleBoundaries;

  static equals(a: ProtoRuleBoundaries | PlainMessage<ProtoRuleBoundaries> | undefined, b: ProtoRuleBoundaries | PlainMessage<ProtoRuleBoundaries> | undefined): boolean;
}

