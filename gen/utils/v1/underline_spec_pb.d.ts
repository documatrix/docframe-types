// @generated by protoc-gen-es v1.9.0
// @generated from file utils/v1/underline_spec.proto (package utils.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ProtoMeasure } from "./measure_pb.js";
import type { ProtoColor } from "./color_pb.js";
import type { ProtoRuleStyle } from "./rule_style_pb.js";

/**
 * @generated from enum utils.v1.ProtoUnderlineMode
 */
export declare enum ProtoUnderlineMode {
  /**
   * dummy is needed here, because otherwise protoc command produces error
   *
   * @generated from enum value: PROTO_UNDERLINE_MODE_DUMMY_UNDERLINE_MODE = 0;
   */
  DUMMY_UNDERLINE_MODE = 0,

  /**
   * @generated from enum value: PROTO_UNDERLINE_MODE_WORDS_NO_BLANKS = 1;
   */
  WORDS_NO_BLANKS = 1,

  /**
   * @generated from enum value: PROTO_UNDERLINE_MODE_WORDS_AND_BLANKS = 2;
   */
  WORDS_AND_BLANKS = 2,

  /**
   * @generated from enum value: PROTO_UNDERLINE_MODE_CHARACTERS_NO_BLANKS = 3;
   */
  CHARACTERS_NO_BLANKS = 3,

  /**
   * @generated from enum value: PROTO_UNDERLINE_MODE_CHARACTERS_AND_BLANKS = 4;
   */
  CHARACTERS_AND_BLANKS = 4,
}

/**
 * @generated from message utils.v1.ProtoUnderlineSpec
 */
export declare class ProtoUnderlineSpec extends Message<ProtoUnderlineSpec> {
  /**
   * @generated from field: utils.v1.ProtoMeasure weight = 1;
   */
  weight?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoUnderlineMode mode = 2;
   */
  mode: ProtoUnderlineMode;

  /**
   * @generated from field: utils.v1.ProtoColor color = 3;
   */
  color?: ProtoColor;

  /**
   * @generated from field: int32 offset_em = 4;
   */
  offsetEm: number;

  /**
   * @generated from field: utils.v1.ProtoRuleStyle style = 5;
   */
  style: ProtoRuleStyle;

  constructor(data?: PartialMessage<ProtoUnderlineSpec>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoUnderlineSpec";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoUnderlineSpec;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoUnderlineSpec;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoUnderlineSpec;

  static equals(a: ProtoUnderlineSpec | PlainMessage<ProtoUnderlineSpec> | undefined, b: ProtoUnderlineSpec | PlainMessage<ProtoUnderlineSpec> | undefined): boolean;
}

/**
 * @generated from message utils.v1.ProtoBoxedUnderlineSpec
 */
export declare class ProtoBoxedUnderlineSpec extends Message<ProtoBoxedUnderlineSpec> {
  /**
   * @generated from field: utils.v1.ProtoUnderlineSpec value = 1;
   */
  value?: ProtoUnderlineSpec;

  /**
   * @generated from field: bool is_null = 2;
   */
  isNull: boolean;

  constructor(data?: PartialMessage<ProtoBoxedUnderlineSpec>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoBoxedUnderlineSpec";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoBoxedUnderlineSpec;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoBoxedUnderlineSpec;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoBoxedUnderlineSpec;

  static equals(a: ProtoBoxedUnderlineSpec | PlainMessage<ProtoBoxedUnderlineSpec> | undefined, b: ProtoBoxedUnderlineSpec | PlainMessage<ProtoBoxedUnderlineSpec> | undefined): boolean;
}

