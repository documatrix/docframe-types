// @generated by protoc-gen-es v1.9.0
// @generated from file utils/v1/font.proto (package utils.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message utils.v1.ProtoFont
 */
export declare class ProtoFont extends Message<ProtoFont> {
  /**
   * @generated from field: int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<ProtoFont>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoFont";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoFont;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoFont;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoFont;

  static equals(a: ProtoFont | PlainMessage<ProtoFont> | undefined, b: ProtoFont | PlainMessage<ProtoFont> | undefined): boolean;
}

/**
 * @generated from message utils.v1.ProtoBoxedFont
 */
export declare class ProtoBoxedFont extends Message<ProtoBoxedFont> {
  /**
   * @generated from field: utils.v1.ProtoFont value = 1;
   */
  value?: ProtoFont;

  /**
   * @generated from field: bool is_null = 2;
   */
  isNull: boolean;

  constructor(data?: PartialMessage<ProtoBoxedFont>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoBoxedFont";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoBoxedFont;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoBoxedFont;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoBoxedFont;

  static equals(a: ProtoBoxedFont | PlainMessage<ProtoBoxedFont> | undefined, b: ProtoBoxedFont | PlainMessage<ProtoBoxedFont> | undefined): boolean;
}

