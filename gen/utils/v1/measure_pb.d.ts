// @generated by protoc-gen-es v1.9.0
// @generated from file utils/v1/measure.proto (package utils.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum utils.v1.ProtoMeasureType
 */
export declare enum ProtoMeasureType {
  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_PT = 0;
   */
  PT = 0,

  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_CM = 1;
   */
  CM = 1,

  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_MM = 2;
   */
  MM = 2,

  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_IN = 3;
   */
  IN = 3,

  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_PERCENT = 4;
   */
  PERCENT = 4,

  /**
   * @generated from enum value: PROTO_MEASURE_TYPE_PX = 5;
   */
  PX = 5,
}

/**
 * @generated from message utils.v1.ProtoMeasure
 */
export declare class ProtoMeasure extends Message<ProtoMeasure> {
  /**
   * @generated from field: double value = 1;
   */
  value: number;

  /**
   * @generated from field: utils.v1.ProtoMeasureType mtype = 2;
   */
  mtype: ProtoMeasureType;

  constructor(data?: PartialMessage<ProtoMeasure>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoMeasure";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoMeasure;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoMeasure;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoMeasure;

  static equals(a: ProtoMeasure | PlainMessage<ProtoMeasure> | undefined, b: ProtoMeasure | PlainMessage<ProtoMeasure> | undefined): boolean;
}

/**
 * @generated from message utils.v1.ProtoBoxedMeasure
 */
export declare class ProtoBoxedMeasure extends Message<ProtoBoxedMeasure> {
  /**
   * @generated from field: utils.v1.ProtoMeasure value = 1;
   */
  value?: ProtoMeasure;

  /**
   * @generated from field: bool is_null = 2;
   */
  isNull: boolean;

  constructor(data?: PartialMessage<ProtoBoxedMeasure>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoBoxedMeasure";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoBoxedMeasure;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoBoxedMeasure;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoBoxedMeasure;

  static equals(a: ProtoBoxedMeasure | PlainMessage<ProtoBoxedMeasure> | undefined, b: ProtoBoxedMeasure | PlainMessage<ProtoBoxedMeasure> | undefined): boolean;
}

/**
 * @generated from message utils.v1.ProtoSideMeasures
 */
export declare class ProtoSideMeasures extends Message<ProtoSideMeasures> {
  /**
   * @generated from field: utils.v1.ProtoMeasure top = 1;
   */
  top?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure right = 2;
   */
  right?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure bottom = 3;
   */
  bottom?: ProtoMeasure;

  /**
   * @generated from field: utils.v1.ProtoMeasure left = 4;
   */
  left?: ProtoMeasure;

  constructor(data?: PartialMessage<ProtoSideMeasures>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "utils.v1.ProtoSideMeasures";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProtoSideMeasures;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProtoSideMeasures;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProtoSideMeasures;

  static equals(a: ProtoSideMeasures | PlainMessage<ProtoSideMeasures> | undefined, b: ProtoSideMeasures | PlainMessage<ProtoSideMeasures> | undefined): boolean;
}

