// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: utils/v1/color.proto

package utilsv1

import (
	v1 "github.com/documatrix/docframe-types/gen/box/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoColorType int32

const (
	ProtoColorType_PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE ProtoColorType = 0 // dummy is needed here, because otherwise protoc command produces error
	ProtoColorType_PROTO_COLOR_TYPE_RGB              ProtoColorType = 3
	ProtoColorType_PROTO_COLOR_TYPE_CMYK             ProtoColorType = 4
)

// Enum value maps for ProtoColorType.
var (
	ProtoColorType_name = map[int32]string{
		0: "PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE",
		3: "PROTO_COLOR_TYPE_RGB",
		4: "PROTO_COLOR_TYPE_CMYK",
	}
	ProtoColorType_value = map[string]int32{
		"PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE": 0,
		"PROTO_COLOR_TYPE_RGB":              3,
		"PROTO_COLOR_TYPE_CMYK":             4,
	}
)

func (x ProtoColorType) Enum() *ProtoColorType {
	p := new(ProtoColorType)
	*p = x
	return p
}

func (x ProtoColorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoColorType) Descriptor() protoreflect.EnumDescriptor {
	return file_utils_v1_color_proto_enumTypes[0].Descriptor()
}

func (ProtoColorType) Type() protoreflect.EnumType {
	return &file_utils_v1_color_proto_enumTypes[0]
}

func (x ProtoColorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoColorType.Descriptor instead.
func (ProtoColorType) EnumDescriptor() ([]byte, []int) {
	return file_utils_v1_color_proto_rawDescGZIP(), []int{0}
}

// Use ProtoColor both for ProtoRGBColor
// and ProtoCMYKColor. Inheritance is not
// supported by protobuf and this is the
// easiest and fastest way found.
type ProtoColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *v1.ProtoBoxedString   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          ProtoColorType         `protobuf:"varint,2,opt,name=type,proto3,enum=utils.v1.ProtoColorType" json:"type,omitempty"` // set to RGB or CMYK
	R             int32                  `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	G             int32                  `protobuf:"varint,4,opt,name=g,proto3" json:"g,omitempty"`
	B             int32                  `protobuf:"varint,5,opt,name=b,proto3" json:"b,omitempty"`
	C             int32                  `protobuf:"varint,6,opt,name=c,proto3" json:"c,omitempty"`
	M             int32                  `protobuf:"varint,7,opt,name=m,proto3" json:"m,omitempty"`
	Y             int32                  `protobuf:"varint,8,opt,name=y,proto3" json:"y,omitempty"`
	K             int32                  `protobuf:"varint,9,opt,name=k,proto3" json:"k,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoColor) Reset() {
	*x = ProtoColor{}
	mi := &file_utils_v1_color_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoColor) ProtoMessage() {}

func (x *ProtoColor) ProtoReflect() protoreflect.Message {
	mi := &file_utils_v1_color_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoColor.ProtoReflect.Descriptor instead.
func (*ProtoColor) Descriptor() ([]byte, []int) {
	return file_utils_v1_color_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoColor) GetName() *v1.ProtoBoxedString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProtoColor) GetType() ProtoColorType {
	if x != nil {
		return x.Type
	}
	return ProtoColorType_PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE
}

func (x *ProtoColor) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *ProtoColor) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *ProtoColor) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *ProtoColor) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *ProtoColor) GetM() int32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *ProtoColor) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ProtoColor) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

type ProtoBoxedColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         *ProtoColor            `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	IsNull        bool                   `protobuf:"varint,2,opt,name=is_null,json=isNull,proto3" json:"is_null,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoBoxedColor) Reset() {
	*x = ProtoBoxedColor{}
	mi := &file_utils_v1_color_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoBoxedColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBoxedColor) ProtoMessage() {}

func (x *ProtoBoxedColor) ProtoReflect() protoreflect.Message {
	mi := &file_utils_v1_color_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBoxedColor.ProtoReflect.Descriptor instead.
func (*ProtoBoxedColor) Descriptor() ([]byte, []int) {
	return file_utils_v1_color_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoBoxedColor) GetValue() *ProtoColor {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ProtoBoxedColor) GetIsNull() bool {
	if x != nil {
		return x.IsNull
	}
	return false
}

type ProtoRGBColor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// extends Color
	Name          *v1.ProtoBoxedString `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          ProtoColorType       `protobuf:"varint,2,opt,name=type,proto3,enum=utils.v1.ProtoColorType" json:"type,omitempty"` // set to RGB
	R             int32                `protobuf:"varint,3,opt,name=r,proto3" json:"r,omitempty"`
	G             int32                `protobuf:"varint,4,opt,name=g,proto3" json:"g,omitempty"`
	B             int32                `protobuf:"varint,5,opt,name=b,proto3" json:"b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoRGBColor) Reset() {
	*x = ProtoRGBColor{}
	mi := &file_utils_v1_color_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoRGBColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRGBColor) ProtoMessage() {}

func (x *ProtoRGBColor) ProtoReflect() protoreflect.Message {
	mi := &file_utils_v1_color_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRGBColor.ProtoReflect.Descriptor instead.
func (*ProtoRGBColor) Descriptor() ([]byte, []int) {
	return file_utils_v1_color_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoRGBColor) GetName() *v1.ProtoBoxedString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProtoRGBColor) GetType() ProtoColorType {
	if x != nil {
		return x.Type
	}
	return ProtoColorType_PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE
}

func (x *ProtoRGBColor) GetR() int32 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *ProtoRGBColor) GetG() int32 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *ProtoRGBColor) GetB() int32 {
	if x != nil {
		return x.B
	}
	return 0
}

type ProtoCMYKColor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// extends Color
	Name          *v1.ProtoBoxedString `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          ProtoColorType       `protobuf:"varint,2,opt,name=type,proto3,enum=utils.v1.ProtoColorType" json:"type,omitempty"` // set to CMYK
	C             int32                `protobuf:"varint,3,opt,name=c,proto3" json:"c,omitempty"`
	M             int32                `protobuf:"varint,4,opt,name=m,proto3" json:"m,omitempty"`
	Y             int32                `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`
	K             int32                `protobuf:"varint,6,opt,name=k,proto3" json:"k,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoCMYKColor) Reset() {
	*x = ProtoCMYKColor{}
	mi := &file_utils_v1_color_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoCMYKColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCMYKColor) ProtoMessage() {}

func (x *ProtoCMYKColor) ProtoReflect() protoreflect.Message {
	mi := &file_utils_v1_color_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCMYKColor.ProtoReflect.Descriptor instead.
func (*ProtoCMYKColor) Descriptor() ([]byte, []int) {
	return file_utils_v1_color_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoCMYKColor) GetName() *v1.ProtoBoxedString {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ProtoCMYKColor) GetType() ProtoColorType {
	if x != nil {
		return x.Type
	}
	return ProtoColorType_PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE
}

func (x *ProtoCMYKColor) GetC() int32 {
	if x != nil {
		return x.C
	}
	return 0
}

func (x *ProtoCMYKColor) GetM() int32 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *ProtoCMYKColor) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ProtoCMYKColor) GetK() int32 {
	if x != nil {
		return x.K
	}
	return 0
}

var File_utils_v1_color_proto protoreflect.FileDescriptor

const file_utils_v1_color_proto_rawDesc = "" +
	"\n" +
	"\x14utils/v1/color.proto\x12\butils.v1\x1a\x13box/v1/string.proto\"\xca\x01\n" +
	"\n" +
	"ProtoColor\x12,\n" +
	"\x04name\x18\x01 \x01(\v2\x18.box.v1.ProtoBoxedStringR\x04name\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.utils.v1.ProtoColorTypeR\x04type\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\x12\f\n" +
	"\x01g\x18\x04 \x01(\x05R\x01g\x12\f\n" +
	"\x01b\x18\x05 \x01(\x05R\x01b\x12\f\n" +
	"\x01c\x18\x06 \x01(\x05R\x01c\x12\f\n" +
	"\x01m\x18\a \x01(\x05R\x01m\x12\f\n" +
	"\x01y\x18\b \x01(\x05R\x01y\x12\f\n" +
	"\x01k\x18\t \x01(\x05R\x01k\"V\n" +
	"\x0fProtoBoxedColor\x12*\n" +
	"\x05value\x18\x01 \x01(\v2\x14.utils.v1.ProtoColorR\x05value\x12\x17\n" +
	"\ais_null\x18\x02 \x01(\bR\x06isNull\"\x95\x01\n" +
	"\rProtoRGBColor\x12,\n" +
	"\x04name\x18\x01 \x01(\v2\x18.box.v1.ProtoBoxedStringR\x04name\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.utils.v1.ProtoColorTypeR\x04type\x12\f\n" +
	"\x01r\x18\x03 \x01(\x05R\x01r\x12\f\n" +
	"\x01g\x18\x04 \x01(\x05R\x01g\x12\f\n" +
	"\x01b\x18\x05 \x01(\x05R\x01b\"\xa4\x01\n" +
	"\x0eProtoCMYKColor\x12,\n" +
	"\x04name\x18\x01 \x01(\v2\x18.box.v1.ProtoBoxedStringR\x04name\x12,\n" +
	"\x04type\x18\x02 \x01(\x0e2\x18.utils.v1.ProtoColorTypeR\x04type\x12\f\n" +
	"\x01c\x18\x03 \x01(\x05R\x01c\x12\f\n" +
	"\x01m\x18\x04 \x01(\x05R\x01m\x12\f\n" +
	"\x01y\x18\x05 \x01(\x05R\x01y\x12\f\n" +
	"\x01k\x18\x06 \x01(\x05R\x01k*l\n" +
	"\x0eProtoColorType\x12%\n" +
	"!PROTO_COLOR_TYPE_DUMMY_COLOR_TYPE\x10\x00\x12\x18\n" +
	"\x14PROTO_COLOR_TYPE_RGB\x10\x03\x12\x19\n" +
	"\x15PROTO_COLOR_TYPE_CMYK\x10\x04B\x96\x01\n" +
	"\fcom.utils.v1B\n" +
	"ColorProtoP\x01Z9github.com/documatrix/docframe-types/gen/utils/v1;utilsv1\xa2\x02\x03UXX\xaa\x02\bUtils.V1\xca\x02\bUtils\\V1\xe2\x02\x14Utils\\V1\\GPBMetadata\xea\x02\tUtils::V1b\x06proto3"

var (
	file_utils_v1_color_proto_rawDescOnce sync.Once
	file_utils_v1_color_proto_rawDescData []byte
)

func file_utils_v1_color_proto_rawDescGZIP() []byte {
	file_utils_v1_color_proto_rawDescOnce.Do(func() {
		file_utils_v1_color_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_utils_v1_color_proto_rawDesc), len(file_utils_v1_color_proto_rawDesc)))
	})
	return file_utils_v1_color_proto_rawDescData
}

var file_utils_v1_color_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_utils_v1_color_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_utils_v1_color_proto_goTypes = []any{
	(ProtoColorType)(0),         // 0: utils.v1.ProtoColorType
	(*ProtoColor)(nil),          // 1: utils.v1.ProtoColor
	(*ProtoBoxedColor)(nil),     // 2: utils.v1.ProtoBoxedColor
	(*ProtoRGBColor)(nil),       // 3: utils.v1.ProtoRGBColor
	(*ProtoCMYKColor)(nil),      // 4: utils.v1.ProtoCMYKColor
	(*v1.ProtoBoxedString)(nil), // 5: box.v1.ProtoBoxedString
}
var file_utils_v1_color_proto_depIdxs = []int32{
	5, // 0: utils.v1.ProtoColor.name:type_name -> box.v1.ProtoBoxedString
	0, // 1: utils.v1.ProtoColor.type:type_name -> utils.v1.ProtoColorType
	1, // 2: utils.v1.ProtoBoxedColor.value:type_name -> utils.v1.ProtoColor
	5, // 3: utils.v1.ProtoRGBColor.name:type_name -> box.v1.ProtoBoxedString
	0, // 4: utils.v1.ProtoRGBColor.type:type_name -> utils.v1.ProtoColorType
	5, // 5: utils.v1.ProtoCMYKColor.name:type_name -> box.v1.ProtoBoxedString
	0, // 6: utils.v1.ProtoCMYKColor.type:type_name -> utils.v1.ProtoColorType
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_utils_v1_color_proto_init() }
func file_utils_v1_color_proto_init() {
	if File_utils_v1_color_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_utils_v1_color_proto_rawDesc), len(file_utils_v1_color_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_utils_v1_color_proto_goTypes,
		DependencyIndexes: file_utils_v1_color_proto_depIdxs,
		EnumInfos:         file_utils_v1_color_proto_enumTypes,
		MessageInfos:      file_utils_v1_color_proto_msgTypes,
	}.Build()
	File_utils_v1_color_proto = out.File
	file_utils_v1_color_proto_goTypes = nil
	file_utils_v1_color_proto_depIdxs = nil
}
