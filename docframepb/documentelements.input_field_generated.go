// Code generated by go generate; DO NOT EDIT.
// This file was generated by docframe document element generator
package docframepb


func (inputFieldText *ProtoInputFieldText) ToNode(children ...Message) *Node {
	nodeChildren := make([]*Node, len(children))
	for i, c := range children {
		nodeChildren[i] = c.ToNode()
	}

	node := &Node{
		Object: &Node_InputFieldText{
			InputFieldText: inputFieldText,
		},
		Children: nodeChildren,
	}

	return node
}

func (inputFieldDate *ProtoInputFieldDate) ToNode(children ...Message) *Node {
	nodeChildren := make([]*Node, len(children))
	for i, c := range children {
		nodeChildren[i] = c.ToNode()
	}

	node := &Node{
		Object: &Node_InputFieldDate{
			InputFieldDate: inputFieldDate,
		},
		Children: nodeChildren,
	}

	return node
}

func (inputFieldCheckbox *ProtoInputFieldCheckbox) ToNode(children ...Message) *Node {
	nodeChildren := make([]*Node, len(children))
	for i, c := range children {
		nodeChildren[i] = c.ToNode()
	}

	node := &Node{
		Object: &Node_InputFieldCheckbox{
			InputFieldCheckbox: inputFieldCheckbox,
		},
		Children: nodeChildren,
	}

	return node
}

func (inputFieldLabel *ProtoInputFieldLabel) ToNode(children ...Message) *Node {
	nodeChildren := make([]*Node, len(children))
	for i, c := range children {
		nodeChildren[i] = c.ToNode()
	}

	node := &Node{
		Object: &Node_InputFieldLabel{
			InputFieldLabel: inputFieldLabel,
		},
		Children: nodeChildren,
	}

	return node
}

func (inputFieldDropdown *ProtoInputFieldDropdown) ToNode(children ...Message) *Node {
	nodeChildren := make([]*Node, len(children))
	for i, c := range children {
		nodeChildren[i] = c.ToNode()
	}

	node := &Node{
		Object: &Node_InputFieldDropdown{
			InputFieldDropdown: inputFieldDropdown,
		},
		Children: nodeChildren,
	}

	return node
}

